{"version":3,"file":"static/js/630.1e1180df.chunk.js","mappings":"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","sources":["components/OurProducts/Konvas/Marsel.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Stage, Layer, Rect, Line, Text } from 'react-konva';\n\nexport default function Marsel({\n  dimensions,\n  productWidth,\n  productDepth,\n  angleDirection,\n}) {\n  const [scaleFactor, setScaleFactor] = useState(1);\n\n  const sofaTotalDepth = productDepth * scaleFactor;\n  const sofaTotalWidth = productWidth * scaleFactor;\n\n  const armrestsWidth = 20 * scaleFactor;\n  const sleepingWidth = sofaTotalWidth - armrestsWidth * 2;\n  const sleepingDepth = sofaTotalDepth - 15;\n\n  const cornerBack = 15 * scaleFactor;\n  const cornerSeatWidth = sleepingWidth / 3;\n\n  const linearSeatWidth = (sleepingWidth / 3) * 2;\n  const linearSeatDepth = 80 * scaleFactor;\n\n  const offsetX =\n    dimensions.width / 2 + (cornerSeatWidth + cornerBack) - sleepingWidth / 2;\n  const offsetY = dimensions.height / 2 - sleepingDepth / 2;\n\n  useEffect(() => {\n    const value = Math.min(\n      (0.7 * dimensions.width) / productWidth,\n      (0.7 * dimensions.height) / productDepth\n    );\n    if (value > 0) {\n      setScaleFactor(value);\n    }\n  }, [dimensions, productWidth, productDepth]);\n\n  return (\n    <div>\n      <Stage width={dimensions.width} height={dimensions.height}>\n        {angleDirection.value === '7' && (\n          <Layer>\n            <Rect\n              x={offsetX - cornerSeatWidth - armrestsWidth}\n              y={offsetY - cornerBack}\n              width={armrestsWidth}\n              height={linearSeatDepth + cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX - cornerSeatWidth}\n              y={offsetY - cornerBack}\n              width={cornerSeatWidth}\n              height={cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Line\n              points={[\n                offsetX,\n                offsetY,\n                offsetX - cornerSeatWidth,\n                offsetY,\n                offsetX - cornerSeatWidth,\n                offsetY + linearSeatDepth,\n                offsetX - cornerSeatWidth - armrestsWidth + (2 * scaleFactor),\n                offsetY + linearSeatDepth,\n                offsetX - cornerSeatWidth - armrestsWidth + (0.5 * scaleFactor),\n                offsetY + linearSeatDepth + (0.5 * scaleFactor),\n                offsetX - cornerSeatWidth - armrestsWidth,\n                offsetY + linearSeatDepth + (2 * scaleFactor),\n                offsetX - cornerSeatWidth - armrestsWidth,\n                offsetY + linearSeatDepth + (sofaTotalDepth - (linearSeatDepth + cornerBack)) - (2 * scaleFactor),\n                offsetX - cornerSeatWidth - armrestsWidth + (0.5 * scaleFactor),\n                offsetY + linearSeatDepth + (sofaTotalDepth - (linearSeatDepth + cornerBack)) - (0.5 * scaleFactor),\n                offsetX - cornerSeatWidth - armrestsWidth + (2 * scaleFactor),\n                offsetY + linearSeatDepth + (sofaTotalDepth - (linearSeatDepth + cornerBack)),\n                offsetX + 3 * scaleFactor - (2 * scaleFactor),\n                offsetY + linearSeatDepth + (sofaTotalDepth - (linearSeatDepth + cornerBack)),\n                offsetX + 3 * scaleFactor - (0.5 * scaleFactor),\n                offsetY + linearSeatDepth + (sofaTotalDepth - (linearSeatDepth + cornerBack)) - (0.5 * scaleFactor),\n                offsetX + 3 * scaleFactor,\n                offsetY + linearSeatDepth + (sofaTotalDepth - (linearSeatDepth + cornerBack)) - (2 * scaleFactor),\n                offsetX + 3 * scaleFactor,\n                offsetY + linearSeatDepth + (2 * scaleFactor),\n                offsetX + 3 * scaleFactor - (0.5 * scaleFactor),\n                offsetY + linearSeatDepth + (0.5 * scaleFactor),\n                offsetX + 3 * scaleFactor - (2 * scaleFactor),\n                offsetY + linearSeatDepth,\n\n                offsetX,\n                offsetY + linearSeatDepth,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={true}\n            />\n            <Rect\n              x={offsetX}\n              y={offsetY}\n              width={linearSeatWidth / 2}\n              height={linearSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX + linearSeatWidth / 2}\n              y={offsetY}\n              width={linearSeatWidth / 2}\n              height={linearSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX}\n              y={offsetY - cornerBack}\n              width={linearSeatWidth}\n              height={cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n            />\n            <Rect\n              x={offsetX + linearSeatWidth}\n              y={offsetY - cornerBack}\n              width={armrestsWidth}\n              height={linearSeatDepth + cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n          </Layer>\n        )}\n        {angleDirection.value !== '7' && (\n          <Layer>\n            <Rect\n              x={offsetX - cornerSeatWidth - armrestsWidth}\n              y={offsetY - cornerBack}\n              width={armrestsWidth}\n              height={linearSeatDepth + cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX + (linearSeatWidth - cornerSeatWidth)}\n              y={offsetY - cornerBack}\n              width={cornerSeatWidth}\n              height={cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Line\n              points={[\n                offsetX + (linearSeatWidth - cornerSeatWidth),\n                offsetY,\n                offsetX + linearSeatWidth,\n                offsetY,\n                offsetX + linearSeatWidth,\n                offsetY + linearSeatDepth,\n                offsetX + linearSeatWidth + armrestsWidth - 2 * scaleFactor,\n                offsetY + linearSeatDepth,\n                offsetX + linearSeatWidth + armrestsWidth - 0.5 * scaleFactor,\n                offsetY + linearSeatDepth + 0.5 * scaleFactor,\n                offsetX + linearSeatWidth + armrestsWidth,\n                offsetY + linearSeatDepth + 2 * scaleFactor,\n                offsetX + linearSeatWidth + armrestsWidth,\n                offsetY + (sofaTotalDepth - cornerBack) - 2 * scaleFactor,\n                offsetX + linearSeatWidth + armrestsWidth - 0.5 * scaleFactor,\n                offsetY + (sofaTotalDepth - cornerBack) - 0.5 * scaleFactor,\n                offsetX + linearSeatWidth + armrestsWidth - 2 * scaleFactor,\n                offsetY + (sofaTotalDepth - cornerBack),\n                offsetX +\n                  linearSeatWidth -\n                  cornerSeatWidth -\n                  3 * scaleFactor +\n                  2 * scaleFactor,\n                offsetY + (sofaTotalDepth - cornerBack),\n                offsetX +\n                  linearSeatWidth -\n                  cornerSeatWidth -\n                  3 * scaleFactor +\n                  0.5 * scaleFactor,\n                offsetY + (sofaTotalDepth - cornerBack) - 0.5 * scaleFactor,\n                offsetX + linearSeatWidth - cornerSeatWidth - 3 * scaleFactor,\n                offsetY + (sofaTotalDepth - cornerBack) - 2 * scaleFactor,\n                offsetX + linearSeatWidth - cornerSeatWidth - 3 * scaleFactor,\n                offsetY + linearSeatDepth + 2 * scaleFactor,\n                offsetX +\n                  linearSeatWidth -\n                  cornerSeatWidth -\n                  3 * scaleFactor +\n                  0.5 * scaleFactor,\n                offsetY + linearSeatDepth + 0.5 * scaleFactor,\n                offsetX +\n                  linearSeatWidth -\n                  cornerSeatWidth -\n                  3 * scaleFactor +\n                  2 * scaleFactor,\n                offsetY + linearSeatDepth,\n                offsetX + linearSeatWidth - cornerSeatWidth,\n                offsetY + linearSeatDepth,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={true}\n            />\n            <Rect\n              x={offsetX - cornerSeatWidth}\n              y={offsetY}\n              width={linearSeatWidth / 2}\n              height={linearSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX + linearSeatWidth / 2 - cornerSeatWidth}\n              y={offsetY}\n              width={linearSeatWidth / 2}\n              height={linearSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX - cornerSeatWidth}\n              y={offsetY - cornerBack}\n              width={linearSeatWidth}\n              height={cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n            />\n            <Rect\n              x={offsetX + linearSeatWidth}\n              y={offsetY - cornerBack}\n              width={armrestsWidth}\n              height={linearSeatDepth + cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n          </Layer>\n        )}\n        <Layer>\n          <Line\n            points={[\n              offsetX + 100,\n              offsetY + sofaTotalDepth,\n              offsetX + linearSeatWidth + armrestsWidth,\n              offsetY + sofaTotalDepth,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX,\n              offsetY + sofaTotalDepth,\n              offsetX - cornerSeatWidth - armrestsWidth,\n              offsetY + sofaTotalDepth,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX}\n            y={offsetY + sofaTotalDepth - 9}\n            text={productWidth}\n            width={100}\n            align=\"center\"\n            fontSize={18}\n          />\n          <Line\n            points={[\n              offsetX - sofaTotalWidth / 2,\n              offsetY + ((sofaTotalDepth - cornerBack) / 2) - 50,\n              offsetX - sofaTotalWidth / 2,\n              offsetY - cornerBack,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - sofaTotalWidth / 2,\n              offsetY + (sofaTotalDepth - cornerBack),\n              offsetX - sofaTotalWidth / 2,\n              offsetY + ((sofaTotalDepth - cornerBack) / 2) + 50,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - sofaTotalWidth / 2 - 9}\n            y={offsetY + ((sofaTotalDepth - cornerBack) / 2) + 50}\n            text={productDepth}\n            width={100}\n            align=\"center\"\n            rotation={270}\n            fontSize={18}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"names":["Marsel","dimensions","productWidth","productDepth","angleDirection","useState","scaleFactor","setScaleFactor","sofaTotalDepth","sofaTotalWidth","armrestsWidth","sleepingWidth","sleepingDepth","cornerBack","cornerSeatWidth","linearSeatWidth","linearSeatDepth","offsetX","width","offsetY","height","useEffect","value","Math","min","x","y","stroke","strokeWidth","cornerRadius","points","closed","text","align","fontSize","rotation"],"sourceRoot":""}