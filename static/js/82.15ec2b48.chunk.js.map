{"version":3,"file":"static/js/82.15ec2b48.chunk.js","mappings":"8MAUMA,GAAaC,EAAAA,EAAAA,aACjB,WAEEC,GACI,IAFFC,EAEC,EAFDA,WAAYC,EAEX,EAFWA,aAAcC,EAEzB,EAFyBA,aAAcC,EAEvC,EAFuCA,cAAeC,EAEtD,EAFsDA,iBAGzD,GAAsCC,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,QAAO,MAElBC,EAAiBR,EAAeI,EAChCK,EAAiBV,EAAeK,EAEhCM,EAAUZ,EAAWa,MAAQ,EAC7BC,EAAUd,EAAWe,OAAS,EAE9BC,EAAQb,EAAcc,MAAK,SAAAC,GAAM,MAAkB,SAAdA,EAAOC,EAAX,KAA6BhB,EAAcc,MAAK,SAAAC,GAAM,MAAkB,SAAdA,EAAOC,EAAX,KAE7FC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,KAAKC,IAChB,GAAMvB,EAAWa,MAASZ,EAC1B,GAAMD,EAAWe,OAAUb,GAE1BmB,EAAQ,GAAKA,IAAUf,GACzBC,EAAec,EAElB,GAAE,CAACrB,EAAYC,EAAcC,EAAcI,KAE5CkB,EAAAA,EAAAA,qBAAoBzB,GAAK,iBAAO,CAC9B0B,SAD8B,WAE5B,OAAOjB,EAASkB,QAAQC,UAAU,CAChCC,SAAU,aACVC,QAAS,GAEZ,EANsB,IASzB,IAAIC,GAAkBC,EAAAA,EAAAA,UACpB,iBAAM,CACJ,CACEZ,GAAI,OACJa,KAAM,uCACNC,SAAU,CAAEC,EAAGtB,EAASuB,EAAGrB,GAC3BC,OAAQ,IACRF,MAAO,IACPuB,KAAM,SAACH,EAAUlB,EAAQF,GAAnB,OACJ,iCACE,SAAC,KAAD,CACEwB,OAAQ,CACNJ,EAASC,EACTD,EAASE,EAAI,EAAI7B,EACjB2B,EAASC,EAAIrB,EAAQ,EACrBoB,EAASE,EAAI,EAAI7B,EACjB2B,EAASC,EAAIrB,EACboB,EAASE,EAAI,EAAI7B,GAEnBgC,OAAO,QACPC,YAAa,EACbC,QAAQ,EACRC,SAAS,QACTC,QAAS,MAEX,SAAC,KAAD,CACER,EAAGD,EAASC,EACZC,EAAGF,EAASE,EAAI,EAAI7B,EACpBO,MAAOA,EACPE,OAAQA,EAAS,EACjBuB,OAAO,QACPC,YAAa,EACbI,aAAc,KAEhB,SAAC,KAAD,CACET,EAAGD,EAASC,EACZC,EAAGF,EAASE,EAAIpB,EAAS,EAAI,EAAIT,EACjCO,MAAOA,EACPE,OAAQA,GAAUA,EAAS,EAAI,EAAIT,GACnCgC,OAAO,QACPC,YAAa,EACbI,aAAc,MAjCd,GAsCR,CACExB,GAAI,OACJa,KAAM,oGACNC,SAAU,CAAEC,EAAGtB,EAASuB,EAAGrB,GAC3BC,OAAQ,IACRF,MAAO,KACPuB,KAAM,SAACH,EAAUlB,EAAQF,GAAnB,OACJ,iCACE,SAAC,KAAD,CACEwB,OAAQ,CACNJ,EAASC,EAAI,IAAM5B,EACnB2B,EAASE,EACTF,EAASC,EACTD,EAASE,EAAIpB,EAAS,EACtBkB,EAASC,EAAI,IAAM5B,EACnB2B,EAASE,EAAIpB,GAEfuB,OAAO,QACPC,YAAa,EACbC,QAAQ,EACRC,SAAS,QACTC,QAAS,KAEX,SAAC,KAAD,CACER,EAAGD,EAASC,EAAI,IAAM5B,EACtB6B,EAAGF,EAASE,EACZtB,MAAOA,EAAQ,IAAMP,EACrBS,OAAQA,EACRuB,OAAO,QACPC,YAAa,EACbI,aAAc,CAAC,EAAG,EAAG,EAAG,OAxBxB,GA6BR,CACExB,GAAI,OACJa,KAAM,0GACNC,SAAU,CAAEC,EAAGtB,EAASuB,EAAGrB,GAC3BC,OAAQ,IACRF,MAAO,KACPuB,KAAM,SAACH,EAAUlB,EAAQF,GAAnB,OACJ,iCACE,SAAC,KAAD,CACEwB,OAAQ,CACNJ,EAASC,EAAIrB,EAAQ,IAAMP,EAC3B2B,EAASE,EACTF,EAASC,EAAIrB,EACboB,EAASE,EAAIpB,EAAS,EACtBkB,EAASC,EAAIrB,EAAQ,IAAMP,EAC3B2B,EAASE,EAAIpB,GAEfuB,OAAO,QACPC,YAAa,EACbC,QAAQ,EACRC,SAAS,QACTC,QAAS,KAEX,SAAC,KAAD,CACER,EAAGD,EAASC,EACZC,EAAGF,EAASE,EACZtB,MAAOA,EAAQ,IAAMP,EACrBS,OAAQA,EACRuB,OAAO,QACPC,YAAa,EACbI,aAAc,CAAC,EAAG,EAAG,EAAG,OAxBxB,GA6BR,CACExB,GAAI,OACJa,KAAM,yDACNC,SAAU,CAAEC,EAAGtB,EAASuB,EAAGrB,GAC3BC,OAAQ,EACRF,MAAO,IACPuB,KAAM,SAACH,EAAUlB,EAAQF,EAAO+B,GAC9B,OAAIA,GAEA,+BACE,SAAC,KAAD,CACEV,EAAGD,EAASC,EACZC,EAAGF,EAASE,EACZtB,MAAOA,EACPE,OAAQA,EACRuB,OAAO,QACPC,YAAa,EACbI,aAAc,CAAC,EAAG,EAAG,EAAG,QAK9BE,QAAQC,KAAK,oBACN,wBAEV,GA5IL,GA+IA,CAAClC,EAASE,EAASR,IAqErB,OA/BAc,EAAAA,EAAAA,YAAU,WAGR,GAA6B,IAAzBjB,EAAc4C,QAAgB5C,EAAc,GAAG8B,SAASC,IAAMtB,EAAUD,EAAiB,EAAG,CAE9F,IAAMqC,EAHY,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAIhDC,KAAI,SAAA9B,GAAE,OAAIW,EAAgBoB,MAAK,SAAAhC,GAAM,OAAIA,EAAOC,KAAOA,CAAlB,GAA/B,IACNgC,OAAOC,SACVhD,EAAiB4C,EAClB,CAED,GAA6B,IAAzB7C,EAAc4C,QAAgB5C,EAAc,GAAG8B,SAASC,IAAMtB,EAAS,CACzE,IAAIyC,EAAWzC,EAAUD,EAAiB,EACtC2C,EAAWxC,EAAUJ,EAAiB,EAEpC6C,EAAoBpD,EAAc8C,KAAI,SAAC/B,EAAQsC,GACvC,IAAVA,IACFH,GAAYlD,EAAcqD,EAAQ,GAAG3C,MAAQP,GAE7B,SAAdY,EAAOC,KACTkC,EAAWzC,EAAUD,EAAiB,EAAKR,EAAc,GAAGU,MAAQP,EACpEgD,EAAWxC,EAAUJ,EAAiB,GAEtC,IAAM+C,EAAkB,CAAEvB,EAAGmB,EAAUlB,EAAGmB,GAE1C,OADAT,QAAQa,IAAID,IACL,kBAAKvC,GAAZ,IAAoBe,SAAUwB,GAC/B,IACDrD,EAAiBmD,EAClB,CACF,GAAE,CAACpD,EAAeC,EAAkBE,EAAawB,EAAiBlB,EAASE,EAASJ,EAAgBC,KAGnG,0BACE,UAAC,KAAD,CACEZ,IAAKS,EACLK,MAAOb,EAAWa,MAClBE,OAAQf,EAAWe,OAHrB,WAKE,SAAC,KAAD,WACE,SAAC,KAAD,CACEmB,EAAG,EACHC,EAAG,EACHtB,MAAOb,EAAWa,MAClBE,OAAQf,EAAWe,OACnB4C,KAAM,WA/EI,WAClB,IAAIC,EAAY,CAAC,EAEXC,EAAc1D,EAAcgD,QAAO,SAAAjC,GAAM,MAAkB,SAAdA,EAAOC,EAAX,IAC/C,GAA2B,IAAvB0C,EAAYd,OAAc,CAC5B,IAAIe,EAAM,EACVD,EAAYE,SAAQ,SAAA7C,GAClB4C,GAAO5C,EAAOL,KACf,IACD+C,EAAU/C,MAAQiD,EAAMxD,CACzB,CAED,OACE,SAAC,KAAD,UACGH,EAAc8C,KAAI,SAAC/B,EAAQsC,GAE1B,IAAMzC,EAASG,EAAOH,OAAST,EACzBO,EAAQK,EAAOL,MAAQP,EAE7B,OACE,SAAC,KAAD,UACiB,SAAdY,EAAOC,GACND,EAAOkB,KACLlB,EAAOe,SACPlB,EACA6C,EAAU/C,MACVG,GACFE,EAAOkB,KAAKlB,EAAOe,SAAUlB,EAAQF,EAAOG,IAPpCwC,EAUf,KAGN,CAiDMQ,IACD,UAAC,KAAD,YACE,SAAC,KAAD,CACE3B,OAAQ,CACNzB,EAAU,GACVE,EAAUJ,EAAiB,IAC3BE,EAAUD,EAAiB,EAC3BG,EAAUJ,EAAiB,KAE7B4B,OAAO,QACPC,YAAa,EACbC,QAAQ,KAEV,SAAC,KAAD,CACEH,OAAQ,CACNzB,EAAU,GACVE,EAAUJ,EAAiB,IAC3BE,EAAUD,EAAiB,EAC3BG,EAAUJ,EAAiB,KAE7B4B,OAAO,QACPC,YAAa,EACbC,QAAQ,KAEV,SAAC,KAAD,CACEN,EAAGtB,EAAU,GACbuB,EAAGrB,EAAUJ,EAAiB,IAAM,EACpCuD,KAAMhE,EACNY,MAAO,IACPqD,MAAM,SACNC,SAAU,MAEZ,SAAC,KAAD,CACE9B,OAAQ,CACNzB,EAAUD,EAAiB,IAC3BG,EAAUJ,EAAiB,EAC3BE,EAAUD,EAAiB,IAC3BG,EAAU,IAEZwB,OAAO,QACPC,YAAa,EACbC,QAAQ,KAEV,SAAC,KAAD,CACEH,OAAQ,CACNzB,EAAUD,EAAiB,IAC3BG,EAAU,GACVF,EAAUD,EAAiB,IAC3BG,EAAUJ,EAAiB,GAE7B4B,OAAO,QACPC,YAAa,EACbC,QAAQ,KAEV,SAAC,KAAD,CACEN,EAAGtB,EAAUD,EAAiB,IAAM,EACpCwB,EAAGrB,EAAU,GACbmD,KAAM/D,EACNW,MAAO,IACPqD,MAAM,SACNE,SAAU,IACVD,SAAU,YAMrB,IAGH,W","sources":["components/OurProducts/Konvas/Faynee-mini.js"],"sourcesContent":["import React, {\n  useMemo,\n  useState,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react';\nimport { Stage, Layer, Rect, Line, Text, Group } from 'react-konva';\n\nconst FayneeMini = forwardRef(\n  (\n    { dimensions, productWidth, productDepth, activeModules, setActiveModules },\n    ref\n  ) => {\n    const [scaleFactor, setScaleFactor] = useState(1);\n\n    const stageRef = useRef(null);\n\n    const sofaTotalDepth = productDepth * scaleFactor;\n    const sofaTotalWidth = productWidth * scaleFactor;\n\n    const offsetX = dimensions.width / 2;\n    const offsetY = dimensions.height / 2;\n\n    const isARM = activeModules.some(module => module.id === 'ARML') && activeModules.some(module => module.id === 'ARMR');\n\n    useEffect(() => {\n      const value = Math.min(\n        (0.7 * dimensions.width) / productWidth,\n        (0.7 * dimensions.height) / productDepth\n      );\n      if (value > 0 && value !== scaleFactor) {\n        setScaleFactor(value);\n      }\n    }, [dimensions, productWidth, productDepth, scaleFactor]);\n\n    useImperativeHandle(ref, () => ({\n      getImage() {\n        return stageRef.current.toDataURL({\n          mimeType: 'image/jpeg',\n          quality: 1,\n        });\n      },\n    }));\n\n    let possibleModules = useMemo(\n      () => [\n        {\n          id: 'FM01',\n          name: 'модуль',\n          position: { x: offsetX, y: offsetY },\n          height: 120,\n          width: 100,\n          mark: (position, height, width) => (\n            <>\n              <Line\n                points={[\n                  position.x,\n                  position.y + 8 * scaleFactor,\n                  position.x + width / 2,\n                  position.y + 3 * scaleFactor,\n                  position.x + width,\n                  position.y + 8 * scaleFactor,\n                ]}\n                stroke=\"black\"\n                strokeWidth={1}\n                closed={false}\n                lineJoin=\"round\"\n                tension={0.7}\n              />\n              <Rect\n                x={position.x}\n                y={position.y + 8 * scaleFactor}\n                width={width}\n                height={height / 6}\n                stroke=\"black\"\n                strokeWidth={1}\n                cornerRadius={2}\n              />\n              <Rect\n                x={position.x}\n                y={position.y + height / 6 + 8 * scaleFactor}\n                width={width}\n                height={height - (height / 6 + 8 * scaleFactor)}\n                stroke=\"black\"\n                strokeWidth={1}\n                cornerRadius={4}\n              />\n            </>\n          ),\n        },\n        {\n          id: 'ARML',\n          name: 'подлокотник левый',\n          position: { x: offsetX, y: offsetY },\n          height: 120,\n          width: 17.5,\n          mark: (position, height, width) => (\n            <>\n              <Line\n                points={[\n                  position.x + 2.5 * scaleFactor,\n                  position.y,\n                  position.x,\n                  position.y + height / 2,\n                  position.x + 2.5 * scaleFactor,\n                  position.y + height,\n                ]}\n                stroke=\"black\"\n                strokeWidth={1}\n                closed={false}\n                lineJoin=\"round\"\n                tension={1}\n              />\n              <Rect\n                x={position.x + 2.5 * scaleFactor}\n                y={position.y}\n                width={width - 2.5 * scaleFactor}\n                height={height}\n                stroke=\"black\"\n                strokeWidth={1}\n                cornerRadius={[0, 3, 3, 0]}\n              />\n            </>\n          ),\n        },\n        {\n          id: 'ARMR',\n          name: 'подлокотник правый',\n          position: { x: offsetX, y: offsetY },\n          height: 120,\n          width: 17.5,\n          mark: (position, height, width) => (\n            <>\n              <Line\n                points={[\n                  position.x + width - 2.5 * scaleFactor,\n                  position.y,\n                  position.x + width,\n                  position.y + height / 2,\n                  position.x + width - 2.5 * scaleFactor,\n                  position.y + height,\n                ]}\n                stroke=\"black\"\n                strokeWidth={1}\n                closed={false}\n                lineJoin=\"round\"\n                tension={1}\n              />\n              <Rect\n                x={position.x}\n                y={position.y}\n                width={width - 2.5 * scaleFactor}\n                height={height}\n                stroke=\"black\"\n                strokeWidth={1}\n                cornerRadius={[3, 0, 0, 3]}\n              />\n            </>\n          ),\n        },\n        {\n          id: 'BKPL',\n          name: 'пристенок',\n          position: { x: offsetX, y: offsetY },\n          height: 3,\n          width: 200,\n          mark: (position, height, width, arm) => {\n            if (arm) {\n              return (\n                <>\n                  <Rect\n                    x={position.x}\n                    y={position.y}\n                    width={width}\n                    height={height}\n                    stroke=\"black\"\n                    strokeWidth={1}\n                    cornerRadius={[3, 3, 0, 0]}\n                  />\n                </>\n              );\n            } else {\n              console.warn('not enough arms');\n              return <></>;\n            }\n          },\n        },\n      ],\n      [offsetX, offsetY, scaleFactor]\n    );\n\n    const drawModules = () => {\n      let backStrap = {}\n\n      const seatModules = activeModules.filter(module => module.id === 'FM01')\n      if (seatModules.length !== 0) {\n        let acc = 0;\n        seatModules.forEach(module => {\n          acc += module.width\n        });\n        backStrap.width = acc * scaleFactor;\n      }\n\n      return (\n        <Layer>\n          {activeModules.map((module, index) => {\n\n            const height = module.height * scaleFactor;\n            const width = module.width * scaleFactor;\n\n            return (\n              <Group key={index}>\n                {module.id === 'BKPL' ? \n                  module.mark(\n                    module.position, \n                    height, \n                    backStrap.width, \n                    isARM)\n                : module.mark(module.position, height, width, isARM)}\n              </Group>\n            );\n          })}\n        </Layer>\n      );\n    };\n\n    useEffect(() => {\n\n      const standardArr = ['ARML', 'FM01', 'FM01', 'ARMR', 'BKPL'];\n      if (activeModules.length === 0 || activeModules[0].position.x !== offsetX - sofaTotalWidth / 2) {\n      // if (activeModules.length === 0 || activeModules[0].position.x !== offsetX - sofaTotalWidth / 2) {\n        const sortedModules = standardArr\n          .map(id => possibleModules.find(module => module.id === id))\n          .filter(Boolean);\n        setActiveModules(sortedModules);\n      } \n\n      if (activeModules.length !== 0 && activeModules[0].position.x === offsetX) {\n        let currentX = offsetX - sofaTotalWidth / 2;\n        let currentY = offsetY - sofaTotalDepth / 2;\n\n        const positionedModules = activeModules.map((module, index) => {\n        if (index !== 0) {\n          currentX += activeModules[index - 1].width * scaleFactor;\n        } \n        if (module.id === 'BKPL') {\n          currentX = offsetX - sofaTotalWidth / 2 + (activeModules[0].width * scaleFactor);\n          currentY = offsetY - sofaTotalDepth / 2;\n        }\n          const updatedPosition = { x: currentX, y: currentY};\n          console.log(updatedPosition)\n          return { ...module, position: updatedPosition }\n        })\n        setActiveModules(positionedModules);\n      }\n    }, [activeModules, setActiveModules, scaleFactor, possibleModules, offsetX, offsetY, sofaTotalDepth, sofaTotalWidth]);\n\n    return (\n      <div>\n        <Stage\n          ref={stageRef}\n          width={dimensions.width}\n          height={dimensions.height}\n        >\n          <Layer>\n            <Rect\n              x={0}\n              y={0}\n              width={dimensions.width}\n              height={dimensions.height}\n              fill={'#FFF'}\n            />\n          </Layer>\n          {drawModules()}\n          <Layer>\n            <Line\n              points={[\n                offsetX + 50,\n                offsetY + sofaTotalDepth / 1.4,\n                offsetX + sofaTotalWidth / 2,\n                offsetY + sofaTotalDepth / 1.4,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={false}\n            />\n            <Line\n              points={[\n                offsetX - 50,\n                offsetY + sofaTotalDepth / 1.4,\n                offsetX - sofaTotalWidth / 2,\n                offsetY + sofaTotalDepth / 1.4,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={false}\n            />\n            <Text\n              x={offsetX - 50}\n              y={offsetY + sofaTotalDepth / 1.4 - 9}\n              text={productWidth}\n              width={100}\n              align=\"center\"\n              fontSize={18}\n            />\n            <Line\n              points={[\n                offsetX - sofaTotalWidth / 1.7,\n                offsetY - sofaTotalDepth / 2,\n                offsetX - sofaTotalWidth / 1.7,\n                offsetY - 50,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={false}\n            />\n            <Line\n              points={[\n                offsetX - sofaTotalWidth / 1.7,\n                offsetY + 50,\n                offsetX - sofaTotalWidth / 1.7,\n                offsetY + sofaTotalDepth / 2,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={false}\n            />\n            <Text\n              x={offsetX - sofaTotalWidth / 1.7 - 9}\n              y={offsetY + 50}\n              text={productDepth}\n              width={100}\n              align=\"center\"\n              rotation={270}\n              fontSize={18}\n            />\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n);\n\nexport default FayneeMini;\n"],"names":["FayneeMini","forwardRef","ref","dimensions","productWidth","productDepth","activeModules","setActiveModules","useState","scaleFactor","setScaleFactor","stageRef","useRef","sofaTotalDepth","sofaTotalWidth","offsetX","width","offsetY","height","isARM","some","module","id","useEffect","value","Math","min","useImperativeHandle","getImage","current","toDataURL","mimeType","quality","possibleModules","useMemo","name","position","x","y","mark","points","stroke","strokeWidth","closed","lineJoin","tension","cornerRadius","arm","console","warn","length","sortedModules","map","find","filter","Boolean","currentX","currentY","positionedModules","index","updatedPosition","log","fill","backStrap","seatModules","acc","forEach","drawModules","text","align","fontSize","rotation"],"sourceRoot":""}