{"version":3,"file":"static/js/818.ed29cd1e.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/CollectionEditor/CollectionEditor.module.css?fe36","components/CollectionEditor/CollectionEditor.js","pages/MyRoom.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CollectionEditor_wrapper__BODBf\",\"formWrapper\":\"CollectionEditor_formWrapper__GYzoj\",\"formItem\":\"CollectionEditor_formItem__qqpkN\",\"field\":\"CollectionEditor_field__XQu45\",\"inputArray\":\"CollectionEditor_inputArray__Ospp1\",\"minBtn\":\"CollectionEditor_minBtn__6g+Kk\",\"btn\":\"CollectionEditor_btn__PRioK\"};","import { Formik, Field, Form, FieldArray } from 'formik';\nimport axios from 'axios';\nimport css from './CollectionEditor.module.css';\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nconst groups = [\n    { value: 'sofa', label: 'Sofa' },\n    { value: 'bed', label: 'Bed' },\n  ];\n\nexport const CollectionEditor = () => {\n\n    const [selectedGroup, setSelectedGroup] = useState('sofa');\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const handleFileChange = (event) => {\n        setSelectedFiles([...event.target.files]);\n    };\n\n    useEffect(() => {}, \n    [selectedGroup])\n\n  return (\n    <div className={css.wrapper}>\n        <h2 className={css.title}>Collection Editor</h2>\n        <Formik\n        initialValues={{\n            group: selectedGroup,\n            name: '',\n            dimensions: {\n                width: '',\n                height: '',\n                depth: ''\n            },\n            subscription: '',\n            basePrice: '',\n            images: [''],\n            components: [''],\n        }}\n        onSubmit={async (values, { resetForm }) => {\n            try {\n                const formData = new FormData();\n                formData.append('group', values.group);\n                formData.append('name', values.name);\n                formData.append('dimensions', values.dimensions);\n                formData.append('subscription', values.subscription);\n                formData.append('basePrice', values.basePrice);\n                formData.append('components', values.components);\n                formData.append('files', selectedFiles);\n                // selectedFiles.forEach((file, index) => {\n                //     formData.append(`files`, file);\n                // });\n\n                const response = await axios.post('/collections/add', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n                console.log(response);\n                resetForm();\n            } catch(error) {\n                console.log(error);\n            }\n        }}\n        >\n        <Form className={css.formWrapper}>\n            <div className={css.formItem}>\n                <label htmlFor=\"group\">Group</label>\n                {/* <Field className={css.field} id=\"group\" name=\"group\" placeholder=\"Sofa\" /> */}\n                <Select\n                        className={css.field}\n                        id=\"group\"\n                        name=\"group\"\n                        defaultValue={selectedGroup}\n                        onChange={setSelectedGroup}\n                        options={groups}\n                    />\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"name\">Name</label>\n                <Field className={css.field} id=\"name\" name=\"name\" placeholder=\"Faynee mini\" />\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.width\">Width</label>\n                <Field className={css.field} id=\"dimensions.width\" name=\"dimensions.width\" placeholder=\"Width\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.depth\">Depth</label>\n                <Field className={css.field} id=\"dimensions.depth\" name=\"dimensions.depth\" placeholder=\"Depth\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.height\">Height</label>\n                <Field className={css.field} id=\"dimensions.height\" name=\"dimensions.height\" placeholder=\"Height\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"subscription\">Subscription</label>\n                <Field className={css.field} id=\"subscription\" name=\"subscription\" placeholder=\"Subscription\" />\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"basePrice\">Base price</label>\n                <Field className={css.field} id=\"basePrice\" name=\"basePrice\" placeholder=\"12500\" />\n            </div>\n            <div className={css.formItem}>\n                <Field className={css.field} id=\"files\" name=\"files\" type=\"file\" multiple onChange={handleFileChange}/>\n                {/* <FieldArray\n                    name=\"files\"\n                    render={(arrayHelpers) => (\n                        <div>\n                        {arrayHelpers.form.values.images.map((image, index) => (\n                            <div key={index} className={css.inputArray}>\n                            <Field className={css.field} \n                                name={`images.${index}`} \n                                placeholder=\"images\" type=\"file\" \n                                multiple \n                                onChange={handleFileChange}/>\n                            {arrayHelpers.form.values.images.length > 1 ? <button\n                                className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => arrayHelpers.remove(index)}\n                            >\n                                -\n                            </button> : <></>}\n                            {index === arrayHelpers.form.values.images.length - 1 && (\n                                <button\n                                    className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => arrayHelpers.push('')}\n                                >\n                                +\n                                </button>\n                            )}\n                            </div>\n                        ))}\n                        </div>\n                    )}\n                /> */}\n            </div>\n            <div className={css.formItem}>\n                <FieldArray\n                    name=\"components\"\n                    render={(arrayHelpers) => (\n                        <div>\n                        {arrayHelpers.form.values.components.map((component, index) => (\n                            <div key={index} className={css.inputArray}>\n                            <Field className={css.field} name={`components.${index}`} placeholder=\"components\"/>\n                            {arrayHelpers.form.values.components.length > 1 ? <button\n                                className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => arrayHelpers.remove(index)}\n                            >\n                                -\n                            </button> : <></>}\n                            {index === arrayHelpers.form.values.components.length - 1 && (\n                                <button\n                                    className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => arrayHelpers.push('')}\n                                >\n                                +\n                                </button>\n                            )}\n                            </div>\n                        ))}\n                        </div>\n                    )}\n                />  \n            </div>\n            <button type=\"submit\" className={css.btn}>Submit</button>\n        </Form>\n        </Formik>\n    </div>\n  );\n};","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CollectionEditor } from '../components/CollectionEditor/CollectionEditor';\n\nexport default function MyRoom() {\n\n  return (\n    <>\n      <HelmetProvider>\n          <Helmet>\n              <title>My room</title>\n          </Helmet>\n          <h1>It's your private room</h1>\n          <CollectionEditor />\n      </HelmetProvider>\n    </>\n  );\n}"],"names":["axios","process","groups","value","label","CollectionEditor","useState","selectedGroup","setSelectedGroup","selectedFiles","setSelectedFiles","useEffect","className","css","initialValues","group","name","dimensions","width","height","depth","subscription","basePrice","images","components","onSubmit","values","resetForm","formData","FormData","append","headers","response","console","log","htmlFor","id","defaultValue","onChange","options","placeholder","type","multiple","event","target","files","render","arrayHelpers","form","map","component","index","length","onClick","remove","push","MyRoom"],"sourceRoot":""}