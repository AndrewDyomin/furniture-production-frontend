{"version":3,"file":"static/js/241.0d3fed65.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/OurProducts/ProductDetails/ProductDetails.module.css?e195","webpack://furniture-production-frontend/./src/components/OurProducts/AdminMenu/AdminMenu.module.css?0177","components/OurProducts/AdminMenu/AdminMenu.js","components/OurProducts/ProductComponents/ProductComponents.js","components/OurProducts/ProductDetails/ProductDetails.js","pages/ProductDetails.js","redux/components/selectors.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ProductDetails_section__nPSK1\",\"title\":\"ProductDetails_title__Qkudl\",\"image\":\"ProductDetails_image__LbA4l\",\"baseInfoTitle\":\"ProductDetails_baseInfoTitle__0a0ed\",\"price\":\"ProductDetails_price__DFFDm\",\"adminBlock\":\"ProductDetails_adminBlock__bY86e\"};","// extracted by mini-css-extract-plugin\nexport default {\"delModalWrapper\":\"AdminMenu_delModalWrapper__Gfzrs\",\"formWrapper\":\"AdminMenu_formWrapper__ybfPv\",\"formItem\":\"AdminMenu_formItem__KchmS\",\"label\":\"AdminMenu_label__UnqU9\",\"field\":\"AdminMenu_field__bFN4e\",\"quantityField\":\"AdminMenu_quantityField__Kt6mI\",\"inputArray\":\"AdminMenu_inputArray__+FLIB\",\"selectComponent\":\"AdminMenu_selectComponent__6Gq8o\",\"minBtn\":\"AdminMenu_minBtn__BCYDU\",\"btn\":\"AdminMenu_btn__7lnqu\",\"delBtn\":\"AdminMenu_delBtn__LcZEy\",\"modalSubmitButton\":\"AdminMenu_modalSubmitButton__lp4X-\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteProduct } from \"../../../redux/products/operations\";\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from './AdminMenu.module.css';\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PopUp } from \"components/PopUp/PopUp\";\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport axios from 'axios';\nimport { selectAllComponents } from \"../../../redux/components/selectors\";\nimport Select from 'react-select';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nexport const AdminMenu = (id) => {\n\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n    const product = useSelector(selectActiveProduct);\n    const components = useSelector(selectAllComponents).array;\n    const initialComponents = product.components.length > 0 ? product.components : [''];\n    let componentList = [];\n    let initialComponentId = [];\n    let initialComponentQuantity = [];\n\n    try {\n    components.forEach((component) => {\n        componentList.push({value: component._id, label: `${component.name}/${component.units}`})\n    })} catch {}\n\n    try {\n    initialComponents.forEach((component) => {\n        initialComponentId.push(component.id);\n        initialComponentQuantity.push(component.quantity);\n    })} catch {}\n    \n    const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n    const [selectedComponents, setSelectedComponents] = useState([ ...initialComponentId ]);\n    const [selectedQuantity, setSelectedQuantity] = useState([ ...initialComponentQuantity ]);\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    useEffect(() => {\n        setSelectedComponents([ ...initialComponentId ]);\n        setSelectedQuantity([ ...initialComponentQuantity ]);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isModalEditOpen]);\n\n    const handleDelete = () => {\n        dispatch(deleteProduct(id));\n    }\n\n    const openEditModal = () => {\n      setIsModalEditOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeEditModal = () => {\n      setIsModalEditOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n\n    const openDeleteModal = () => {\n      setIsDeleteModalOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeDeleteModal = () => {\n      setIsDeleteModalOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n    \n    const getSelectLabel = (id) => {\n        try {\n          const placeholder = componentList.find(c => c.value === id).label;\n           return placeholder\n        } catch {\n            return ('Select...')\n        }\n    };\n\n    const addComponentField = () => {\n        setSelectedComponents(prevState => [...prevState, '']);\n        setSelectedQuantity(prevState => [...prevState, '']);\n    };\n    \n    const removeComponentField = (componentId) => {\n        setSelectedComponents(prevState => prevState.filter(id => id !== componentId));\n        setSelectedQuantity(prevState => prevState.filter((_, i) => selectedComponents[i] !== componentId));\n    };\n\n    const handleFileChange = (event) => {\n        setSelectedFiles([ ...event.target.files ]);\n    };\n\n    return (\n        <div>\n            <button onClick={openDeleteModal} className={css.btn}>{t('delete')}</button>\n            <button className={css.btn} onClick={openEditModal}>{t('edit')}</button>\n            <PopUp \n                isOpen={isModalEditOpen}\n                close={closeEditModal}\n                className={css.modalContent}\n                body={\n                    <>\n                        <p>{t('edit mode')}</p>\n                        <Formik\n                        initialValues={{\n                            name: product.name,\n                            dimensions: {\n                                width: product.dimensions.width,\n                                height: product.dimensions.height,\n                                depth: product.dimensions.depth\n                            },\n                            description: product.description,\n                            basePrice: product.basePrice,\n                            components: selectedComponents,\n                            quantity: selectedQuantity,\n                            images: product.images,\n                        }}\n                        onSubmit={async (values) => {\n                            try {\n                                let formData = new FormData();\n                                let componentsArray = [];\n                                values.images.forEach((image, index) => {\n                                    formData.append(`images[${index}]`, values.images[index]);\n                                });\n                                selectedFiles.forEach(file => {\n                                    formData.append('file', file);\n                                });\n                                const dimensionsJSON = JSON.stringify(values.dimensions);\n                                formData.append('dimensions', dimensionsJSON);\n                                formData.append('name', values.name);\n                                formData.append('description', values.description);\n                                formData.append('basePrice', values.basePrice);\n                                formData.append('_id', id.id);\n                                selectedComponents.forEach((component, index) => {\n                                    const componentId = component;\n                                    const quantity = selectedQuantity[index];\n                                    componentsArray.push({'id': componentId, quantity});\n                                })\n                                const componentsJSON = JSON.stringify(componentsArray);\n                                formData.append('components', componentsJSON);\n                                await axios.post('/collections/update', formData, {\n                                    headers: {\n                                        'Content-Type': 'multipart/form-data'\n                                    }\n                                });\n                                closeEditModal();\n                            } catch(error) {\n                                console.log(error);\n                            }\n                        }}\n                        >\n                        <Form className={css.formWrapper}>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"name\">{t('unit name')}</label>\n                                <Field className={css.field} id=\"name\" name=\"name\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.width\">{t('width')}</label>\n                                <Field className={css.field} id=\"dimensions.width\" name=\"dimensions.width\" placeholder=\"Width\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.depth\">{t('depth')}</label>\n                                <Field className={css.field} id=\"dimensions.depth\" name=\"dimensions.depth\" placeholder=\"Depth\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.height\">{t('height')}</label>\n                                <Field className={css.field} id=\"dimensions.height\" name=\"dimensions.height\" placeholder=\"Height\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"description\">{t('description')}</label>\n                                <Field className={css.field} id=\"description\" name=\"description\" placeholder=\"Description\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"basePrice\">{t('base price')}</label>\n                                <Field className={css.field} id=\"basePrice\" name=\"basePrice\" placeholder=\"12500\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <FieldArray\n                                    name=\"images\"\n                                    render={arrayHelpers => (\n                                    <div className={css.field}>\n                                        {arrayHelpers.form.values.images.map(\n                                        (image, index) => (\n                                            <div key={index} className={css.inputItem}>\n                                            <img\n                                                src={image}\n                                                alt={image}\n                                                width={'200px'}\n                                            />\n                                            <button \n                                            className={css.btn}\n                                            type='button'\n                                            onClick={() => arrayHelpers.remove(index)}>\n                                                {t('delete')}\n                                            </button>\n                                            </div>\n                                        )\n                                        )}\n                                    </div>\n                                    )}\n                                />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"files\">{t('add new images')}</label>\n                                <Field className={css.field} id=\"files\" name=\"files\" type=\"file\" onChange={handleFileChange} multiple/>\n                            </div>\n                            <div className={css.formItem}>\n                                <FieldArray\n                                    name=\"components\"\n                                    render={(arrayHelpers) => (\n                                        <div>\n                                        {selectedComponents.map((componentId, index) => (\n                                            <div key={componentId} className={css.inputArray}>\n                                            <Field component={Select} \n                                                className={css.selectComponent}\n                                                name={`components.${index}`} \n                                                onChange={e => setSelectedComponents(prevState => {\n                                                    const updatedComponents = [...prevState];\n                                                    updatedComponents[index] = e.value;\n                                                    return updatedComponents;\n                                                })}\n                                                options={componentList}\n                                                placeholder={getSelectLabel(componentId)}\n                                                >\n                                            </Field>\n                                            <Field \n                                            className={`${css.field} ${css.quantityField}`} \n                                            name={`quantity.${index}`}\n                                            value={selectedQuantity[index] || ''}\n                                            onChange={e => setSelectedQuantity(prevState => {\n                                                const updatedComponents = [...prevState];\n                                                updatedComponents[index] = e.target.value;\n                                                return updatedComponents;\n                                            })} \n                                            placeholder=\"Quantity\" />\n                                            {selectedComponents.length > 1 ? <button\n                                                className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => removeComponentField(componentId)}\n                                            >\n                                                -\n                                            </button> : <></>}\n                                            {index === selectedComponents.length - 1 && (\n                                                <button\n                                                    className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => addComponentField()}\n                                                >\n                                                +\n                                                </button>\n                                            )}\n                                            </div>\n                                        ))}\n                                        </div>\n                                    )}\n                                />  \n                            </div>\n                            <button type=\"submit\" className={`${css.btn} ${css.modalSubmitButton}`}>{t('submit')}</button>\n                        </Form>\n                        </Formik>\n                    </>\n                }\n            />\n            <PopUp \n                isOpen={isDeleteModalOpen}\n                close={closeDeleteModal}\n                body={\n                    <>\n                        <p>{t('are you sure')}???</p>\n                        <div className={css.delModalWrapper}>\n                            <button onClick={closeDeleteModal} className={css.btn}>{t('cancel')}</button>\n                            <button onClick={handleDelete} className={`${css.btn} ${css.delBtn}`}>{t('delete')}</button>\n                        </div>\n                    </>}\n            />\n        </div>\n    )\n}","import { useTranslation } from \"react-i18next\";\nimport { selectAllComponents } from \"../../../redux/components/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect, useCallback } from \"react\";\n\nexport const ProductComponents = ({ components }) => {\n\n  const allComponentsArray = useSelector(selectAllComponents).array;\n  const { t } = useTranslation();\n  const [totalUah, setTotalUah] = useState(0);\n  const [totalDollars, setTotalDollars] = useState(0);\n\n  const targetComponent = useCallback((id) => {\n    return allComponentsArray.find((component) => component._id === id);\n  }, [allComponentsArray]);\n\n  useEffect(() => {\n    let uahTotal = 0;\n    let dollarsTotal = 0;\n\n    components.forEach((component) => {\n      const pq = targetComponent(component.id).price * component.quantity;\n      targetComponent(component.id).currency === \"грн\"\n        ? (uahTotal += pq)\n        : (dollarsTotal += pq);\n    });\n\n    setTotalUah(Math.round(uahTotal));\n    setTotalDollars(Math.round(dollarsTotal));\n  }, [components, targetComponent]);\n  \n  try {\n    return (\n        <>\n            <p>{t('product components')}:</p>\n            <ul>\n            {components.map(component => \n                <li key={component.id}>\n                    <p>{`${targetComponent(component.id).name} - ${component.quantity} ${targetComponent(component.id).units}`}</p>\n                </li>\n            )}\n            </ul>\n            <p>{`${t('total')}: ${totalUah}грн, $${totalDollars}`}</p>\n        </>\n\n    )}catch {\n        return (\n            <p>not found</p>\n        )\n    }\n};","import { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from \"./ProductDetails.module.css\";\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Select from 'react-select';\nimport { useAuth } from \"hooks\";\nimport { AdminMenu } from \"../AdminMenu/AdminMenu\";\nimport { ProductComponents } from \"../ProductComponents/ProductComponents\";\n\nconst bedSizes = [\n  { value: '140', label: '140 x 200(190)' },\n  { value: '160', label: '160 x 200(190)' },\n  { value: '180', label: '180 x 200(190)' },\n  { value: '200', label: '200 x 200(190)' },\n];\n\nexport const ProductDetails = () => {\n\n    const { user, isLoggedIn } = useAuth();\n    const [selectedBedSize, setSelectedBedSize] = useState({ value: '160', label: '160 x 200(190)' });\n    const { id } = useParams();\n    const product = useSelector(selectActiveProduct);\n    const { t } = useTranslation();\n    const differenceInWidth = product.dimensions.width - 160;\n    const price = product.basePrice;\n\n    return(\n        <div className={css.section}>\n            <h1 className={css.title}>{product.name}</h1>\n            <Carousel showIndicators={false}>\n                {product.images.map((link) => (\n                    <div key={link}>\n                        <img src={link} alt={product.name}/>\n                    </div>\n                ))}\n            </Carousel>\n            {product.group === 'bed' ? \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>{t('sleeping area')}:</p>\n                    <Select\n                        defaultValue={selectedBedSize}\n                        onChange={setSelectedBedSize}\n                        options={bedSizes}\n                    />\n                    <p className={css.baseInfoTitle}>{t('overall size')}:</p>\n                    <p>{Number(selectedBedSize.value) + Number(differenceInWidth)} x {product.dimensions.depth}({product.dimensions.depth-10})</p>\n                    <p className={css.baseInfoTitle}>{t('price')}:</p>\n                    <p className={css.price}>{price} ₴</p>\n                </div> : \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>{t('overall size')}:</p>\n                    <p>{product.dimensions.depth} x {product.dimensions.width} x {product.dimensions.height}</p>\n                    <p className={css.baseInfoTitle}>{t('price')}:</p>\n                    <p className={css.price}>{product.basePrice} ₴</p>\n                </div>}\n            <p className={css.baseInfoTitle}>{t('description')}:</p>\n            <p>{product.description}</p>\n            {isLoggedIn ? \n                (user.description === \"administrator\" && (\n            <div className={css.adminBlock}>\n                <ProductComponents components={product.components}/>\n                <AdminMenu id={id}/>\n            </div>\n            )) : <></>}\n        </div>\n    )\n}","import { ProductDetails } from \"components/OurProducts/ProductDetails/ProductDetails\"\n\nexport default function Product () {\n    return (\n        <ProductDetails/>\n    )\n}","export const selectAllComponents = state => state.components.items;\n","export const selectAllProducts = state => state.products.items;\nexport const selectActiveProduct = state => state.products.activeItem;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","axios","process","AdminMenu","id","dispatch","useDispatch","t","useTranslation","product","useSelector","selectActiveProduct","components","selectAllComponents","array","initialComponents","length","componentList","initialComponentId","initialComponentQuantity","forEach","component","push","value","_id","label","name","units","quantity","useState","isModalEditOpen","setIsModalEditOpen","selectedComponents","setSelectedComponents","selectedQuantity","setSelectedQuantity","isDeleteModalOpen","setIsDeleteModalOpen","selectedFiles","setSelectedFiles","useEffect","closeEditModal","document","classList","remove","closeDeleteModal","getSelectLabel","find","c","add","initialValues","dimensions","height","depth","description","basePrice","images","onSubmit","values","formData","FormData","componentsArray","image","index","append","file","dimensionsJSON","JSON","stringify","componentId","componentsJSON","headers","console","log","htmlFor","placeholder","render","arrayHelpers","form","map","src","alt","onChange","event","target","files","multiple","Select","e","prevState","updatedComponents","options","filter","_","i","removeComponentField","deleteProduct","ProductComponents","allComponentsArray","totalUah","setTotalUah","totalDollars","setTotalDollars","targetComponent","useCallback","uahTotal","dollarsTotal","pq","price","currency","Math","round","bedSizes","ProductDetails","useAuth","user","isLoggedIn","selectedBedSize","setSelectedBedSize","useParams","differenceInWidth","showIndicators","link","group","defaultValue","Number","Product","state","items","selectAllProducts","products","activeItem"],"sourceRoot":""}