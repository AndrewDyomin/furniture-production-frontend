{"version":3,"file":"static/js/203.1b0b4af1.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/OurProducts/ProductDetails/ProductDetails.module.css?e195","webpack://furniture-production-frontend/./src/components/OurProducts/AdminMenu/AdminMenu.module.css?0177","webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","components/OurProducts/AdminMenu/AdminMenu.js","components/OurProducts/ProductDetails/ProductDetails.js","pages/ProductDetails.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ProductDetails_section__nPSK1\",\"title\":\"ProductDetails_title__Qkudl\",\"image\":\"ProductDetails_image__LbA4l\",\"baseInfoTitle\":\"ProductDetails_baseInfoTitle__0a0ed\",\"price\":\"ProductDetails_price__DFFDm\"};","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"AdminMenu_formWrapper__ybfPv\",\"formItem\":\"AdminMenu_formItem__KchmS\",\"field\":\"AdminMenu_field__bFN4e\",\"inputArray\":\"AdminMenu_inputArray__+FLIB\",\"minBtn\":\"AdminMenu_minBtn__BCYDU\",\"btn\":\"AdminMenu_btn__7lnqu\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteProduct, updateProduct } from \"../../../redux/products/operations\";\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from './AdminMenu.module.css';\nimport { useState } from 'react';\nimport { PopUp } from \"components/PopUp/PopUp\";\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport axios from 'axios';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nexport const AdminMenu = (id) => {\n\n    const dispatch = useDispatch();\n    const product = useSelector(selectActiveProduct);\n\n    const handleDelete = () => {\n        dispatch(deleteProduct(id));\n    }\n\n    const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n\n    const openEditModal = () => {\n      setIsModalEditOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeEditModal = () => {\n      setIsModalEditOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n    const openDeleteModal = () => {\n      setIsDeleteModalOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeDeleteModal = () => {\n      setIsDeleteModalOpen(false);\n      document.body.classList.remove('modal-open');\n    };    \n\n    return (\n        <div>\n            <button onClick={openDeleteModal}>Delete</button>\n            <button className={css.menuButton} onClick={openEditModal}>Edit</button>\n            <PopUp \n                isOpen={isModalEditOpen}\n                close={closeEditModal}\n                body={\n                    <>\n                        <p>Edit mode</p>\n                        <Formik\n                        initialValues={{\n                            name: product.name,\n                            dimensions: {\n                                width: product.dimensions.width,\n                                height: product.dimensions.height,\n                                depth: product.dimensions.depth\n                            },\n                            subscription: product.subscription,\n                            basePrice: product.basePrice,\n                            components: product.components,\n                        }}\n                        onSubmit={async (values) => {\n                            try {\n                                dispatch(updateProduct({ ...id, ...values }));\n                                closeEditModal();\n                            } catch(error) {\n                                console.log(error);\n                            }\n                        }}\n                        >\n                        <Form className={css.formWrapper}>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"name\">Name</label>\n                                <Field className={css.field} id=\"name\" name=\"name\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.width\">Width</label>\n                                <Field className={css.field} id=\"dimensions.width\" name=\"dimensions.width\" placeholder=\"Width\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.depth\">Depth</label>\n                                <Field className={css.field} id=\"dimensions.depth\" name=\"dimensions.depth\" placeholder=\"Depth\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.height\">Height</label>\n                                <Field className={css.field} id=\"dimensions.height\" name=\"dimensions.height\" placeholder=\"Height\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"subscription\">Subscription</label>\n                                <Field className={css.field} id=\"subscription\" name=\"subscription\" placeholder=\"Subscription\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"basePrice\">Base price</label>\n                                <Field className={css.field} id=\"basePrice\" name=\"basePrice\" placeholder=\"12500\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <FieldArray\n                                    name=\"components\"\n                                    render={(arrayHelpers) => (\n                                        <div>\n                                        {arrayHelpers.form.values.components.map((component, index) => (\n                                            <div key={index} className={css.inputArray}>\n                                            <Field className={css.field} name={`components.${index}`} placeholder=\"components\"/>\n                                            {arrayHelpers.form.values.components.length > 1 ? <button\n                                                className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.remove(index)}\n                                            >\n                                                -\n                                            </button> : <></>}\n                                            {index === arrayHelpers.form.values.components.length - 1 && (\n                                                <button\n                                                    className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.push('')}\n                                                >\n                                                +\n                                                </button>\n                                            )}\n                                            </div>\n                                        ))}\n                                        </div>\n                                    )}\n                                />  \n                            </div>\n                            <button type=\"submit\" className={css.btn}>Submit</button>\n                        </Form>\n                        </Formik>\n                    </>\n                }\n            />\n            <PopUp \n                isOpen={isDeleteModalOpen}\n                close={closeDeleteModal}\n                body={\n                    <>\n                        <p>Are you sure???</p>\n                        <button onClick={closeDeleteModal}>Cancel</button>\n                        <button onClick={handleDelete}>Delete</button>\n                    </>}\n            />\n        </div>\n    )\n}","import { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from \"./ProductDetails.module.css\";\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { useAuth } from \"hooks\";\nimport { AdminMenu } from \"../AdminMenu/AdminMenu\";\n\nconst bedSizes = [\n  { value: '140', label: '140 x 200(190)' },\n  { value: '160', label: '160 x 200(190)' },\n  { value: '180', label: '180 x 200(190)' },\n  { value: '200', label: '200 x 200(190)' },\n];\n\nexport const ProductDetails = () => {\n\n    const { user, isLoggedIn } = useAuth();\n    const [selectedBedSize, setSelectedBedSize] = useState({ value: '160', label: '160 x 200(190)' });\n    const { id } = useParams();\n    const product = useSelector(selectActiveProduct);\n    const differenceInWidth = product.dimensions.width - 160;\n    const price = product.basePrice;\n\n    return(\n        <div className={css.section}>\n            <h1 className={css.title}>{product.name}</h1>\n            <Carousel showIndicators={false}>\n                {product.images.map((link) => (\n                    <div key={link}>\n                        <img src={link} alt={product.name}/>\n                    </div>\n                ))}\n            </Carousel>\n            {product.group === 'bed' ? \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>Sleeping area:</p>\n                    <Select\n                        defaultValue={selectedBedSize}\n                        onChange={setSelectedBedSize}\n                        options={bedSizes}\n                    />\n                    <p className={css.baseInfoTitle}>Overall size:</p>\n                    <p>{Number(selectedBedSize.value) + Number(differenceInWidth)} x {product.dimensions.depth}({product.dimensions.depth-10})</p>\n                    <p className={css.baseInfoTitle}>Price:</p>\n                    <p className={css.price}>{price} ₴</p>\n                </div> : \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>Overall size:</p>\n                    <p>{product.dimensions.depth} x {product.dimensions.width} x {product.dimensions.height}</p>\n                    <p className={css.baseInfoTitle}>Price:</p>\n                    <p className={css.price}>{product.basePrice} ₴</p>\n                </div>}\n            <p className={css.baseInfoTitle}>Description:</p>\n            <p>{product.subscription}</p>\n            {isLoggedIn ? \n                (user.subscription === \"administrator\" && (\n            <AdminMenu id={id}/>\n            )) : <></>}\n        </div>\n    )\n}","import { ProductDetails } from \"components/OurProducts/ProductDetails/ProductDetails\"\n\nexport default function Product () {\n    return (\n        <ProductDetails/>\n    )\n}","export const selectAllProducts = state => state.products.items;\nexport const selectActiveProduct = state => state.products.activeItem;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","axios","process","AdminMenu","id","dispatch","useDispatch","product","useSelector","selectActiveProduct","useState","isModalEditOpen","setIsModalEditOpen","closeEditModal","document","classList","remove","isDeleteModalOpen","setIsDeleteModalOpen","closeDeleteModal","add","initialValues","name","dimensions","height","depth","subscription","basePrice","components","onSubmit","values","updateProduct","error","console","log","htmlFor","placeholder","render","arrayHelpers","form","map","component","index","length","push","deleteProduct","bedSizes","value","label","ProductDetails","useAuth","user","isLoggedIn","selectedBedSize","setSelectedBedSize","useParams","differenceInWidth","price","showIndicators","images","link","src","alt","group","defaultValue","onChange","options","Number","Product","selectAllProducts","state","products","items","activeItem"],"sourceRoot":""}