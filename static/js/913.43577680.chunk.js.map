{"version":3,"file":"static/js/913.43577680.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/OrderInfo/OrderInfo.module.css?fcde","components/OrderInfo/OrderInfo.js","pages/OrderDetails.js","redux/orders/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"orderNumber\":\"OrderInfo_orderNumber__2q9MF\",\"description\":\"OrderInfo_description__zLh2V\",\"orderName\":\"OrderInfo_orderName__-OHBi\",\"orderSize\":\"OrderInfo_orderSize__BVU05\",\"orderFabric\":\"OrderInfo_orderFabric__X9Sm5\",\"orderDescription\":\"OrderInfo_orderDescription__iXIxd\",\"orderDeadline\":\"OrderInfo_orderDeadline__8ywa6\",\"imagesList\":\"OrderInfo_imagesList__LA3Fp\",\"orderImage\":\"OrderInfo_orderImage__2G8nz\",\"btn\":\"OrderInfo_btn__fLqg+\",\"minBtn\":\"OrderInfo_minBtn__uJ0Ts\",\"formWrapper\":\"OrderInfo_formWrapper__+kjz9\",\"formItem\":\"OrderInfo_formItem__kNYm6\",\"label\":\"OrderInfo_label__s3BbH\",\"field\":\"OrderInfo_field__Q3vr4\"};","import css from './OrderInfo.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport { selectActiveOrder } from '../../redux/orders/selectors';\nimport { selectUser } from '../../redux/auth/selectors';\nimport { setActiveOrder } from '../../redux/orders/operations';\nimport { PopUp } from 'components/PopUp/PopUp';\n\nexport const OrderInfo = ({ id }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const order = useSelector(selectActiveOrder);\n  const user = useSelector(selectUser);\n\n  function dateToString(date) {\n    const d = new Date(date);\n    const month = d.getMonth() + 1;\n    const dateString = `${d.getDate().toString().padStart(2, '0')}.${month\n      .toString()\n      .padStart(2, '0')}.${d.getFullYear()}`;\n    return dateString;\n  }\n\n  const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  useEffect(() => {}, [selectedFiles, isModalEditOpen])\n\n  const openEditModal = () => {\n    setIsModalEditOpen(true);\n    document.body.classList.add('modal-open');\n    setSelectedFiles([]);\n  };\n  const closeEditModal = () => {\n    setIsModalEditOpen(false);\n    document.body.classList.remove('modal-open');\n  };\n\n  const handleFileChange = (event) => {\n    setSelectedFiles([ ...event.target.files ]);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.orderNumber}>{order.number}</p>\n      <div className={css.description}>\n        <p className={css.orderName}>\n          {order.group} {order.name}\n        </p>\n        <p className={css.orderSize}>\n          {t('size')}: {order.size}\n        </p>\n        <p className={css.orderFabric}>\n          {t('fabric')}: {order.fabric}\n        </p>\n        <p className={css.orderDescription}>\n          {t('description')}: {order.description}\n        </p>\n        <p className={css.orderDeadline}>\n          {t('deadline')}: {dateToString(order.plannedDeadline)}\n        </p>\n        <p>{order.dealer}</p>\n        {user.description === 'seamstress' ||\n        user.description === 'carpenter' ||\n        user.description === 'upholsterer' ? (\n          <></>\n        ) : (\n          <div>\n            <p className={css.orderAdress}>\n              {t('adress')}: {order.adress}\n            </p>\n            <p className={css.orderRest}>\n              {t('rest')}: {order.rest}\n            </p>\n          </div>\n        )}\n      </div>\n      {order.images && order.images.length !== 0 ? (\n        <ul className={css.imagesList}>\n          {order.images.map(imageId => (\n            <li key={`${imageId}`}>\n              <img\n                className={css.orderImage}\n                src={`https://lh3.googleusercontent.com/d/${imageId}=w800?authuser=0`}\n                alt={imageId}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <></>\n      )}\n      {user.description === 'administrator' ? (\n        <div>\n          <button className={css.btn} onClick={openEditModal}>\n            {t('edit')}\n          </button>\n        </div>\n      ) : (\n        <></>\n      )}\n      <PopUp\n        isOpen={isModalEditOpen}\n        close={closeEditModal}\n        className={css.modalContent}\n        body={\n          <>\n            <p>Edit mode</p>\n            <Formik\n              initialValues={{\n                group: order.group,\n                size: order.size,\n                name: order.name,\n                fabric: order.fabric,\n                description: order.description,\n                base: order.base,\n                deliveryDate: order.deliveryDate,\n                innerPrice: order.innerPrice,\n                number: order.number,\n                dealer: order.dealer,\n                deadline: order.deadline,\n                dateOfOrder: dateToString(order.dateOfOrder),\n                adress: order.adress,\n                additional: order.additional,\n                rest: order.rest,\n                plannedDeadline: dateToString(order.plannedDeadline),\n                orderStatus: order.orderStatus,\n                _id: order._id,\n                images: order.images,\n                fabricStatus: order.fabricStatus,\n                coverStatus: order.coverStatus,\n                frameStatus: order.frameStatus,\n              }}\n              onSubmit={async values => {\n                try {\n                  let formData = new FormData();\n                  formData.append('group', values.group);\n                  formData.append('size', values.size);\n                  formData.append('name', values.name);\n                  formData.append('fabric', values.fabric);\n                  formData.append('description', values.description);\n                  formData.append('base', values.base);\n                  formData.append('deliveryDate', values.deliveryDate);\n                  formData.append('innerPrice', values.innerPrice);\n                  formData.append('number', values.number);\n                  formData.append('dealer', values.dealer);\n                  formData.append('deadline', values.deadline);\n                  formData.append('dateOfOrder', values.dateOfOrder);\n                  formData.append('adress', values.adress);\n                  formData.append('additional', values.additional);\n                  formData.append('rest', values.rest);\n                  formData.append('plannedDeadline', values.plannedDeadline);\n                  formData.append('orderStatus', values.orderStatus);\n                  formData.append('_id', values._id);\n                  values.images.forEach((image, index) => {\n                    formData.append(`images[${index}]`, values.images[index]);\n                  });\n                  formData.append('fabricStatus', values.fabricStatus);\n                  formData.append('coverStatus', values.coverStatus);\n                  formData.append('frameStatus', values.frameStatus);\n                  selectedFiles.forEach(file => {\n                    formData.append('file', file);\n                  });\n\n                  const response = await axios.post('/orders/update', formData, {\n                    headers: {\n                      'Content-Type': 'multipart/form-data',\n                    },\n                  });\n                  dispatch(setActiveOrder(response.data))\n                  closeEditModal();\n                } catch (error) {\n                  console.log(error);\n                }\n              }}\n            >\n              <Form className={css.formWrapper}>\n                <div className={css.formItem}>\n                  <label htmlFor=\"group\">{t('group')}</label>\n                  <Field className={css.field} id=\"group\" name=\"group\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"size\">{t('size')}</label>\n                  <Field className={css.field} id=\"size\" name=\"size\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"name\">{t('order name')}</label>\n                  <Field className={css.field} id=\"name\" name=\"name\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"fabric\">{t('fabric')}</label>\n                  <Field className={css.field} id=\"fabric\" name=\"fabric\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"description\">{t('description')}</label>\n                  <Field\n                    className={css.field}\n                    id=\"description\"\n                    name=\"description\"\n                    placeholder=\"Description\"\n                  />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"base\">{t('base')}</label>\n                  <Field className={css.field} id=\"base\" name=\"base\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"innerPrice\">{t('inner price')}</label>\n                  <Field\n                    className={css.field}\n                    id=\"innerPrice\"\n                    name=\"innerPrice\"\n                  />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"number\">{t('number')}</label>\n                  <Field className={css.field} id=\"number\" name=\"number\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"adress\">{t('adress')}</label>\n                  <Field className={css.field} id=\"adress\" name=\"adress\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"additional\">{t('additional')}</label>\n                  <Field\n                    className={css.field}\n                    id=\"additional\"\n                    name=\"additional\"\n                  />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"plannedDeadline\">\n                    {t('planned deadline')}\n                  </label>\n                  <Field\n                    className={css.field}\n                    id=\"plannedDeadline\"\n                    name=\"plannedDeadline\"\n                  />\n                </div>\n                <div className={css.formItem}>\n                  <FieldArray\n                    name=\"images\"\n                    render={arrayHelpers => (\n                      <div>\n                        {arrayHelpers.form.values.images.map(\n                          (image, index) => (\n                            <div key={index} className={css.inputArray}>\n                              <img\n                                src={`https://lh3.googleusercontent.com/d/${image}=w200?authuser=0`}\n                                alt={image}\n                              />\n                              <button \n                              type='button'\n                              onClick={() => arrayHelpers.remove(index)}>\n                                {t('delete')}\n                              </button>\n                            </div>\n                          )\n                        )}\n                      </div>\n                    )}\n                  />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"files\">{t('add new images')}</label>\n                  <Field className={css.field} id=\"files\" name=\"files\" type=\"file\" onChange={handleFileChange} multiple/>\n                </div>\n                <button\n                  type=\"submit\"\n                  className={`${css.btn} ${css.modalSubmitButton}`}\n                >\n                  {t('submit')}\n                </button>\n              </Form>\n            </Formik>\n          </>\n        }\n      />\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { selectLoading } from '../redux/orders/selectors';\nimport { OrderInfo } from '../components/OrderInfo/OrderInfo';\n\nexport default function Orders() {\n  const isLoading = useSelector(selectLoading);\n  const { orderId } = useParams();\n\n  return (\n    <>\n    <HelmetProvider>\n        <Helmet>\n            <title>Order details</title>\n        </Helmet>\n        <div>{isLoading && 'Request in progress...'}</div>\n        <OrderInfo id={orderId}/>\n    </HelmetProvider>\n\n    </>\n  );\n}","export const selectAllOrders = state => state.orders.items;\nexport const selectActiveOrder = state => state.orders.activeItem;\nexport const selectLoading = state => state.orders.isLoading;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","OrderInfo","id","t","useTranslation","dispatch","useDispatch","order","useSelector","selectActiveOrder","user","selectUser","dateToString","date","d","Date","month","getMonth","getDate","toString","padStart","getFullYear","useState","isModalEditOpen","setIsModalEditOpen","selectedFiles","setSelectedFiles","useEffect","closeEditModal","document","classList","remove","number","group","name","size","fabric","description","plannedDeadline","dealer","adress","rest","images","length","map","imageId","src","alt","add","initialValues","base","deliveryDate","innerPrice","deadline","dateOfOrder","additional","orderStatus","_id","fabricStatus","coverStatus","frameStatus","onSubmit","values","formData","FormData","append","forEach","image","index","file","axios","headers","response","setActiveOrder","data","console","log","htmlFor","placeholder","render","arrayHelpers","form","onChange","event","target","files","multiple","Orders","isLoading","selectLoading","orderId","useParams","selectAllOrders","state","orders","items","activeItem"],"sourceRoot":""}