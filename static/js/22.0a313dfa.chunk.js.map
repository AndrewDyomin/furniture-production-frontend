{"version":3,"file":"static/js/22.0a313dfa.chunk.js","mappings":"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","sources":["components/OurProducts/Konvas/Difi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Stage, Layer, Rect, Line, Text } from 'react-konva';\n\nexport default function Difi({\n  dimensions,\n  productWidth,\n  productDepth,\n}) {\n  const [scaleFactor, setScaleFactor] = useState(1);\n\n  const sofaTotalDepth = productDepth * scaleFactor;\n  const sofaTotalWidth = productWidth * scaleFactor;\n\n  const armrestsWidth = 15 * scaleFactor\n  const armrestsDepth = sofaTotalDepth - (2 * scaleFactor)\n\n  const offsetX = dimensions.width / 2;\n  const offsetY = dimensions.height / 2;\n\n  useEffect(() => {\n    const value = Math.min(\n      (0.7 * dimensions.width) / productWidth,\n      (0.7 * dimensions.height) / productDepth\n    );\n    if (value > 0) {\n      setScaleFactor(value);\n    }\n  }, [dimensions, productWidth, productDepth]);\n\n  return (\n    <div>\n      <Stage width={dimensions.width} height={dimensions.height}>\n        <Layer>\n            {/* back */}\n          <Rect\n            x={offsetX - (sofaTotalWidth / 2) + armrestsWidth}\n            y={offsetY - (sofaTotalDepth / 2)}\n            width={sofaTotalWidth - (armrestsWidth * 2)}\n            height={29 * scaleFactor}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n          <Rect\n            x={offsetX - (sofaTotalWidth / 2) + armrestsWidth}\n            y={offsetY - (sofaTotalDepth / 2)}\n            width={sofaTotalWidth - (armrestsWidth * 2)}\n            height={15 * scaleFactor}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n          {/* seat */}\n          <Rect\n            x={offsetX - (sofaTotalWidth / 2) + armrestsWidth}\n            y={offsetY - (sofaTotalDepth / 2) + (29 * scaleFactor)}\n            width={(sofaTotalWidth - (armrestsWidth * 2)) / 2}\n            height={sofaTotalDepth - (29 * scaleFactor)}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n          <Rect\n            x={offsetX}\n            y={offsetY - (sofaTotalDepth / 2) + (29 * scaleFactor)}\n            width={(sofaTotalWidth - (armrestsWidth * 2)) / 2}\n            height={sofaTotalDepth - (29 * scaleFactor)}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n          {/* armrests */}\n          <Rect\n            x={offsetX - (sofaTotalWidth / 2)}\n            y={offsetY - (sofaTotalDepth / 2)}\n            width={armrestsWidth}\n            height={armrestsDepth}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n          <Rect\n            x={offsetX + (sofaTotalWidth / 2) - armrestsWidth}\n            y={offsetY - (sofaTotalDepth / 2)}\n            width={armrestsWidth}\n            height={armrestsDepth}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n        </Layer>\n        <Layer>\n          <Line\n            points={[\n              offsetX + 50,\n              offsetY + (sofaTotalDepth / 1.4),\n              offsetX + (sofaTotalWidth / 2),\n              offsetY + (sofaTotalDepth / 1.4),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - 50,\n              offsetY + (sofaTotalDepth / 1.4),\n              offsetX - (sofaTotalWidth / 2),\n              offsetY + (sofaTotalDepth / 1.4),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - 50}\n            y={offsetY + (sofaTotalDepth / 1.4) - 9}\n            text={productWidth}\n            width={100}\n            align=\"center\"\n            fontSize={18}\n          />\n          <Line\n            points={[\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY - (sofaTotalDepth / 2),\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY - 50,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY + 50,\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY + (sofaTotalDepth / 2),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - (sofaTotalWidth / 1.7) - 9}\n            y={offsetY + 50}\n            text={productDepth}\n            width={100}\n            align=\"center\"\n            rotation={270}\n            fontSize={18}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"names":["Difi","dimensions","productWidth","productDepth","useState","scaleFactor","setScaleFactor","sofaTotalDepth","sofaTotalWidth","armrestsWidth","armrestsDepth","offsetX","width","offsetY","height","useEffect","value","Math","min","x","y","stroke","strokeWidth","cornerRadius","points","closed","text","align","fontSize","rotation"],"sourceRoot":""}