{"version":3,"file":"static/js/845.fd628737.chunk.js","mappings":"mNACA,EAAmC,gCAAnC,EAA8E,wB,SCGjEA,EAAQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAgCnC,OACI,UAAC,IAAD,CACIF,OAAQA,EACRG,eAAgBF,EAChBG,MAlCa,CACjBC,QAAS,CACLC,gBAAiB,sBACjBC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEhBC,QAAS,CACLR,SAAU,WACVC,IAAK,OACLC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRK,SAAU,QACVC,SAAU,MACVC,MAAO,OACPC,UAAW,MACXC,QAAS,YACTC,aAAc,OACdC,OAAQ,kBACRhB,gBAAiB,MACjBiB,WAAY,yBASZC,aAAa,EAJjB,WAMI,mBAAQC,UAAWC,EAAsBC,KAAK,SAASC,QAAS3B,EAAhE,UACI,gBAAKwB,UAAWC,EAAhB,UACI,gBAAKG,KAAI,UAAKC,EAAAA,EAAL,4BAGhB5B,IAGZ,C,iKClDD,GAAgB,IAAM,uBAAuB,QAAU,2BAA2B,OAAS,0BAA0B,SAAW,4BAA4B,UAAY,6BAA6B,YAAc,+BAA+B,eAAiB,kCAAkC,SAAW,4BAA4B,YAAc,+BAA+B,SAAW,4BAA4B,MAAQ,yBAAyB,MAAQ,yBAAyB,UAAY,6BAA6B,gBAAkB,mCAAmC,aAAe,iC,6KCkBlkB6B,EAAY,SAAC,GAAW,EAATC,GAAU,IAAD,IAC3BC,GAAMC,EAAAA,EAAAA,MAAND,EACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GACpBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE7CC,EAAAA,EAAAA,YAAU,WAAQ,GAAE,CAACZ,IAErB,OAA8Ca,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAkDN,EAAAA,EAAAA,WAAS,GAA3D,eAAOO,EAAP,KAA0BC,EAA1B,KAOMC,EAAiB,WACrBP,GAAmB,GACnBQ,SAAS1D,KAAK2D,UAAUC,OAAO,aAChC,EAOKC,EAAmB,WACvBL,GAAqB,GACrBE,SAAS1D,KAAK2D,UAAUC,OAAO,aAChC,EAWKE,EAAqB3B,EAAM4B,YAAYC,MAC3C,SAAAC,GAAI,OAAIA,EAAKC,OAAS5B,EAAK6B,WAAvB,IAGN,OACE,iBAAK5C,UAAWC,EAAAA,QAAhB,WACE,SAAC,KAAD,CAAM4C,GAAIxB,EAAV,UACE,mBAAQrB,UAAS,UAAKC,EAAAA,IAAL,YAAgBA,EAAAA,SAAjC,UACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBAAKG,KAAI,UAAKC,EAAAA,EAAL,qBAAkCZ,MAAO,gBAIxD,cAAGO,UAAWC,EAAAA,UAAd,SAA8BW,EAAMkC,QACpC,cAAG9C,UAAWC,EAAAA,YAAd,SAAgCW,EAAMgC,cAChB,kBAArB7B,EAAK6B,aACJL,EAAmBQ,OAAOC,OAAS,IACjC,SAAC,KAAD,CACEC,YAAY,EACZC,WAAY,CACVC,gBAAgB,GAElBC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBtD,UAAWC,EAAAA,SANb,SAQGsC,EAAmBQ,OAAOQ,KAAI,SAAAC,GAAO,OACpC,SAAC,KAAD,CAEExD,UAAS,uBAAkBC,EAAAA,OAF7B,UAIE,gBACED,UAAWC,EAAAA,WACXwD,IAAG,8CAAyCD,EAAzC,oBACHE,IAAKF,KANFA,EAF6B,MActB,kBAArBzC,EAAK6B,aACJhC,EAAM4B,YAAYQ,OAAS,GAC3BpC,EAAM4B,YAAYe,KAAI,SAAAZ,GAAI,OACxB,4BACE,uBAAIA,EAAKA,QACT,SAAC,KAAD,CACEM,YAAY,EACZC,WAAY,CACVC,gBAAgB,GAElBC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBtD,UAAWC,EAAAA,SANb,SAQG0C,EAAKI,OAAOQ,KAAI,SAAAC,GAAO,OACtB,SAAC,KAAD,CAEExD,UAAS,uBAAkBC,EAAAA,OAF7B,UAIE,gBACED,UAAWC,EAAAA,WACXwD,IAAG,8CAAyCD,EAAzC,oBACHE,IAAKF,KANFA,EAFe,QAVlBb,EAAKA,KADS,KA0B5B,iBAAK3C,UAAWC,EAAAA,eAAhB,WACE,mBAAQD,UAAWC,EAAAA,IAASE,QAjGZ,WACpBwB,GAAmB,GACnBQ,SAAS1D,KAAK2D,UAAUuB,IAAI,cAC5B9B,EAAiB,GAClB,EA6FK,SACGrB,EAAE,WAEL,mBACER,UAAS,UAAKC,EAAAA,IAAL,YAAgBA,EAAAA,QACzBE,QA5FgB,WACtB8B,GAAqB,GACrBE,SAAS1D,KAAK2D,UAAUuB,IAAI,aAC7B,EAuFK,SAIGnD,EAAE,gBAGP,SAAClC,EAAA,EAAD,CACEC,OAAQmD,EACRlD,MAAO0D,EACPlC,UAAWC,EAAAA,aACXxB,MACE,iCACE,uBAAI+B,EAAE,gBACN,SAAC,KAAD,CACEoD,cAAe,CACbd,KAAMlC,EAAMkC,KACZF,YAAahC,EAAMgC,YACnBiB,IAAKjD,EAAMiD,IACXd,OAAQR,EAAmBQ,QAE7Be,SAAQ,mCAAE,WAAMC,GAAN,yFAENhC,GAAa,IACTiC,EAAW,IAAIC,UACVC,OAAO,OAAQH,EAAOjB,MAC/BkB,EAASE,OAAO,cAAeH,EAAOnB,aACtCoB,EAASE,OAAO,MAAOH,EAAOF,KAC9BG,EAASE,OAAO,MAAO3B,EAAmBsB,KAC1CE,EAAOhB,OAAOoB,SAAQ,SAACC,EAAOC,GAC5BL,EAASE,OAAT,iBAA0BG,EAA1B,KAAoCN,EAAOhB,OAAOsB,GACnD,IACDzC,EAAcuC,SAAQ,SAAAG,GACpBN,EAASE,OAAO,OAAQI,EACzB,IAbK,UAeiBC,EAAAA,EAAAA,KACrB,iBACAP,EACA,CACEQ,QAAS,CACP,eAAgB,yBApBhB,QAeAC,EAfA,OAwBN/D,GAASgE,EAAAA,EAAAA,IAAeD,EAASE,OACjC5C,GAAa,GACbG,IA1BM,kDA4BN0C,QAAQC,IAAR,MA5BM,0DAAF,sDAPV,UAuCE,UAAC,KAAD,CAAM7E,UAAWC,EAAAA,YAAjB,WACE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,kBAAO6E,QAAQ,OAAf,SAAuBtE,EAAE,gBACzB,SAAC,KAAD,CAAOR,UAAWC,EAAAA,MAAWM,GAAG,OAAOuC,KAAK,aAE9C,iBAAK9C,UAAWC,EAAAA,SAAhB,WACE,kBAAO6E,QAAQ,cAAf,SAA8BtE,EAAE,kBAChC,SAAC,KAAD,CACER,UAAWC,EAAAA,MACXM,GAAG,cACHuC,KAAK,cACLiC,YAAY,oBAGhB,gBAAK/E,UAAWC,EAAAA,SAAhB,UACE,SAAC,KAAD,CACE6C,KAAK,SACLkC,OAAQ,SAAAC,GAAY,OAClB,gBAAKjF,UAAWC,EAAAA,MAAhB,SACGgF,EAAaC,KAAKnB,OAAOhB,OAAOQ,KAAI,SAACa,EAAOC,GAAR,OACnC,iBAAiBrE,UAAWC,EAAAA,UAA5B,WACE,gBACEwD,IAAG,8CAAyCW,EAAzC,oBACHV,IAAKU,KAEP,mBACEpE,UAAWC,EAAAA,IACXC,KAAK,SACLC,QAAS,kBAAM8E,EAAa5C,OAAOgC,EAA1B,EAHX,SAKG7D,EAAE,cAVG6D,EADyB,KAFrB,OAqBxB,iBAAKrE,UAAWC,EAAAA,SAAhB,WACE,kBAAO6E,QAAQ,QAAf,SAAwBtE,EAAE,qBAC1B,SAAC,KAAD,CACER,UAAWC,EAAAA,MACXM,GAAG,QACHuC,KAAK,QACL5C,KAAK,OACLiF,SAlLO,SAAAC,GACvBvD,GAAiB,OAAIuD,EAAMC,OAAOC,OACnC,EAiLiBC,UAAQ,QAGZ,mBACErF,KAAK,SACLF,UAAS,UAAKC,EAAAA,IAAL,YAAgBA,EAAAA,mBAF3B,SAIG6B,GACC,SAAC,IAAD,CAAa0D,MAAM,UAAUC,KAAK,SAD1B,UAGLjF,EAAE,wBAQnB,SAAClC,EAAA,EAAD,CACEC,OAAQyD,EACRxD,MAAO8D,EACP7D,MACE,iCACE,yBAAI+B,EAAE,gBAAN,UACA,iBAAKR,UAAWC,EAAAA,gBAAhB,WACE,mBAAQE,QAASmC,EAAkBtC,UAAWC,EAAAA,IAA9C,SACGO,EAAE,aAEL,mBACEL,QA5MO,WACnBO,GAASgF,EAAAA,EAAAA,IAAY9E,EAAMiD,MAC3B1C,EAAS,UAAW,CAAEwE,SAAS,GAChC,EA0Ma3F,UAAS,UAAKC,EAAAA,IAAL,YAAgBA,EAAAA,QAF3B,SAIGO,EAAE,sBAQlB,EC5Qc,SAASoF,IACtB,IAAM9D,GAAYjB,EAAAA,EAAAA,IAAYgF,EAAAA,IACtBC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,OACE,+BACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gDAEF,yBAAMhE,GAAa,4BACnB,SAACxB,EAAD,CAAWC,GAAIuF,QAItB,C,+ECrBM,IAAME,EAAkB,SAAA1E,GAAK,OAAIA,EAAM2E,OAAOC,KAAjB,EACvBpF,EAAoB,SAAAQ,GAAK,OAAIA,EAAM2E,OAAOE,UAAjB,C,wGCD/B,IAAMC,EAAkB,SAAA9E,GAAK,OAAIA,EAAM+E,OAAOH,KAAjB,EACvBI,EAAoB,SAAAhF,GAAK,OAAIA,EAAM+E,OAAOF,UAAjB,EACzBN,EAAgB,SAAAvE,GAAK,OAAIA,EAAM+E,OAAOvE,SAAjB,C","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/DruftInfo/DruftInfo.module.css?c878","components/DruftInfo/DruftInfo.js","pages/DruftDetails.js","redux/drufts/selectors.js","redux/orders/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"DruftInfo_btn__J+h5-\",\"backBtn\":\"DruftInfo_backBtn__L+tei\",\"delBtn\":\"DruftInfo_delBtn__lO6I-\",\"backIcon\":\"DruftInfo_backIcon__2Z2g8\",\"druftName\":\"DruftInfo_druftName__sB0aU\",\"druftDcrptn\":\"DruftInfo_druftDcrptn__z2pI6\",\"optionsWrapper\":\"DruftInfo_optionsWrapper__1NieH\",\"mySwiper\":\"DruftInfo_mySwiper__tb+tW\",\"formWrapper\":\"DruftInfo_formWrapper__AF3n+\",\"formItem\":\"DruftInfo_formItem__scx7z\",\"label\":\"DruftInfo_label__G0CJZ\",\"field\":\"DruftInfo_field__WL-2P\",\"inputItem\":\"DruftInfo_inputItem__u8NZq\",\"delModalWrapper\":\"DruftInfo_delModalWrapper__pc2o9\",\"modalContent\":\"DruftInfo_modalContent__kFCKy\"};","import css from './DruftInfo.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport axios from 'axios';\nimport svgIcons from '../../images/icons.svg';\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport { selectActiveDruft } from '../../redux/drufts/selectors';\nimport { selectUser } from '../../redux/auth/selectors';\nimport { setActiveDruft, deleteDruft } from '../../redux/drufts/operations';\nimport { PopUp } from 'components/PopUp/PopUp';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\n\nexport const DruftInfo = ({ id }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const druft = useSelector(selectActiveDruft);\n  const user = useSelector(selectUser);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/drufts';\n\n  useEffect(() => {}, [druft]);\n\n  const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  const openEditModal = () => {\n    setIsModalEditOpen(true);\n    document.body.classList.add('modal-open');\n    setSelectedFiles([]);\n  };\n  const closeEditModal = () => {\n    setIsModalEditOpen(false);\n    document.body.classList.remove('modal-open');\n  };\n\n  const openDeleteModal = () => {\n    setIsDeleteModalOpen(true);\n    document.body.classList.add('modal-open');\n  };\n\n  const closeDeleteModal = () => {\n    setIsDeleteModalOpen(false);\n    document.body.classList.remove('modal-open');\n  };\n\n  const handleFileChange = event => {\n    setSelectedFiles([...event.target.files]);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteDruft(druft._id));\n    navigate('/drufts', { replace: true });\n  };\n\n  const currentImagesArray = druft.imageArrays.find(\n    item => item.role === user.description\n  );\n\n  return (\n    <div className={css.wrapper}>\n      <Link to={backLinkHref}>\n        <button className={`${css.btn} ${css.backBtn}`}>\n          <svg className={css.backIcon}>\n            <use href={`${svgIcons}#icon-arrow-right`} width={'32px'} />\n          </svg>\n        </button>\n      </Link>\n      <p className={css.druftName}>{druft.name}</p>\n      <p className={css.druftDcrptn}>{druft.description}</p>\n      {user.description !== 'administrator' &&\n        currentImagesArray.images.length > 0 && (\n          <Swiper\n            navigation={true}\n            pagination={{\n              dynamicBullets: true,\n            }}\n            modules={[Navigation, Pagination]}\n            className={css.mySwiper}\n          >\n            {currentImagesArray.images.map(imageId => (\n              <SwiperSlide\n                key={imageId}\n                className={`swiper-slide ${css.slide}`}\n              >\n                <img\n                  className={css.druftImage}\n                  src={`https://lh3.googleusercontent.com/d/${imageId}=w800?authuser=0`}\n                  alt={imageId}\n                />\n              </SwiperSlide>\n            ))}\n          </Swiper>\n        )}\n      {user.description === 'administrator' &&\n        druft.imageArrays.length > 0 &&\n        druft.imageArrays.map(role => (\n          <div key={role.role}>\n            <p>{role.role}</p>\n            <Swiper\n              navigation={true}\n              pagination={{\n                dynamicBullets: true,\n              }}\n              modules={[Navigation, Pagination]}\n              className={css.mySwiper}\n            >\n              {role.images.map(imageId => (\n                <SwiperSlide\n                  key={imageId}\n                  className={`swiper-slide ${css.slide}`}\n                >\n                  <img\n                    className={css.druftImage}\n                    src={`https://lh3.googleusercontent.com/d/${imageId}=w800?authuser=0`}\n                    alt={imageId}\n                  />\n                </SwiperSlide>\n              ))}\n            </Swiper>\n          </div>\n        ))}\n      <div className={css.optionsWrapper}>\n        <button className={css.btn} onClick={openEditModal}>\n          {t('edit')}\n        </button>\n        <button\n          className={`${css.btn} ${css.delBtn}`}\n          onClick={openDeleteModal}\n        >\n          {t('delete')}\n        </button>\n      </div>\n      <PopUp\n        isOpen={isModalEditOpen}\n        close={closeEditModal}\n        className={css.modalContent}\n        body={\n          <>\n            <p>{t('edit mode')}</p>\n            <Formik\n              initialValues={{\n                name: druft.name,\n                description: druft.description,\n                _id: druft._id,\n                images: currentImagesArray.images,\n              }}\n              onSubmit={async values => {\n                try {\n                  setIsLoading(true);\n                  let formData = new FormData();\n                  formData.append('name', values.name);\n                  formData.append('description', values.description);\n                  formData.append('_id', values._id);\n                  formData.append('imd', currentImagesArray._id);\n                  values.images.forEach((image, index) => {\n                    formData.append(`images[${index}]`, values.images[index]);\n                  });\n                  selectedFiles.forEach(file => {\n                    formData.append('file', file);\n                  });\n\n                  const response = await axios.post(\n                    '/drufts/update',\n                    formData,\n                    {\n                      headers: {\n                        'Content-Type': 'multipart/form-data',\n                      },\n                    }\n                  );\n                  dispatch(setActiveDruft(response.data));\n                  setIsLoading(false);\n                  closeEditModal();\n                } catch (error) {\n                  console.log(error);\n                }\n              }}\n            >\n              <Form className={css.formWrapper}>\n                <div className={css.formItem}>\n                  <label htmlFor=\"name\">{t('unit name')}</label>\n                  <Field className={css.field} id=\"name\" name=\"name\" />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"description\">{t('description')}</label>\n                  <Field\n                    className={css.field}\n                    id=\"description\"\n                    name=\"description\"\n                    placeholder=\"Description\"\n                  />\n                </div>\n                <div className={css.formItem}>\n                  <FieldArray\n                    name=\"images\"\n                    render={arrayHelpers => (\n                      <div className={css.field}>\n                        {arrayHelpers.form.values.images.map((image, index) => (\n                          <div key={index} className={css.inputItem}>\n                            <img\n                              src={`https://lh3.googleusercontent.com/d/${image}=w200?authuser=0`}\n                              alt={image}\n                            />\n                            <button\n                              className={css.btn}\n                              type=\"button\"\n                              onClick={() => arrayHelpers.remove(index)}\n                            >\n                              {t('delete')}\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  />\n                </div>\n                <div className={css.formItem}>\n                  <label htmlFor=\"files\">{t('add new images')}</label>\n                  <Field\n                    className={css.field}\n                    id=\"files\"\n                    name=\"files\"\n                    type=\"file\"\n                    onChange={handleFileChange}\n                    multiple\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className={`${css.btn} ${css.modalSubmitButton}`}\n                >\n                  {isLoading ? (\n                    <PulseLoader color=\"#c8c19b\" size=\"10px\" />\n                  ) : (\n                    `${t('submit')}`\n                  )}\n                </button>\n              </Form>\n            </Formik>\n          </>\n        }\n      />\n      <PopUp\n        isOpen={isDeleteModalOpen}\n        close={closeDeleteModal}\n        body={\n          <>\n            <p>{t('are you sure')}???</p>\n            <div className={css.delModalWrapper}>\n              <button onClick={closeDeleteModal} className={css.btn}>\n                {t('cancel')}\n              </button>\n              <button\n                onClick={handleDelete}\n                className={`${css.btn} ${css.delBtn}`}\n              >\n                {t('delete')}\n              </button>\n            </div>\n          </>\n        }\n      />\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { selectLoading } from '../redux/orders/selectors';\nimport { DruftInfo } from '../components/DruftInfo/DruftInfo';\n\nexport default function Drufts() {\n  const isLoading = useSelector(selectLoading);\n  const { druftId } = useParams();\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Druft details</title>\n        </Helmet>\n        <div>{isLoading && 'Request in progress...'}</div>\n        <DruftInfo id={druftId} />\n      </HelmetProvider>\n    </>\n  );\n}\n","export const selectAllDrufts = state => state.drufts.items;\nexport const selectActiveDruft = state => state.drufts.activeItem;\nexport const selectLoading = state => state.drufts.isLoading;","export const selectAllOrders = state => state.orders.items;\nexport const selectActiveOrder = state => state.orders.activeItem;\nexport const selectLoading = state => state.orders.isLoading;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","DruftInfo","id","t","useTranslation","dispatch","useDispatch","druft","useSelector","selectActiveDruft","user","selectUser","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","useState","isModalEditOpen","setIsModalEditOpen","selectedFiles","setSelectedFiles","isLoading","setIsLoading","isDeleteModalOpen","setIsDeleteModalOpen","closeEditModal","document","classList","remove","closeDeleteModal","currentImagesArray","imageArrays","find","item","role","description","to","name","images","length","navigation","pagination","dynamicBullets","modules","Navigation","Pagination","map","imageId","src","alt","add","initialValues","_id","onSubmit","values","formData","FormData","append","forEach","image","index","file","axios","headers","response","setActiveDruft","data","console","log","htmlFor","placeholder","render","arrayHelpers","form","onChange","event","target","files","multiple","color","size","deleteDruft","replace","Drufts","selectLoading","druftId","useParams","selectAllDrufts","drufts","items","activeItem","selectAllOrders","orders","selectActiveOrder"],"sourceRoot":""}