{"version":3,"file":"static/js/241.f350735d.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/OurProducts/ProductDetails/ProductDetails.module.css?e195","webpack://furniture-production-frontend/./src/components/OurProducts/AdminMenu/AdminMenu.module.css?0177","components/OurProducts/AdminMenu/AdminMenu.js","components/OurProducts/ProductComponents/ProductComponents.js","components/OurProducts/ProductDetails/ProductDetails.js","pages/ProductDetails.js","redux/components/selectors.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ProductDetails_section__nPSK1\",\"title\":\"ProductDetails_title__Qkudl\",\"image\":\"ProductDetails_image__LbA4l\",\"baseInfoTitle\":\"ProductDetails_baseInfoTitle__0a0ed\",\"price\":\"ProductDetails_price__DFFDm\"};","// extracted by mini-css-extract-plugin\nexport default {\"delModalWrapper\":\"AdminMenu_delModalWrapper__Gfzrs\",\"formWrapper\":\"AdminMenu_formWrapper__ybfPv\",\"formItem\":\"AdminMenu_formItem__KchmS\",\"label\":\"AdminMenu_label__UnqU9\",\"field\":\"AdminMenu_field__bFN4e\",\"quantityField\":\"AdminMenu_quantityField__Kt6mI\",\"inputArray\":\"AdminMenu_inputArray__+FLIB\",\"selectComponent\":\"AdminMenu_selectComponent__6Gq8o\",\"minBtn\":\"AdminMenu_minBtn__BCYDU\",\"btn\":\"AdminMenu_btn__7lnqu\",\"delBtn\":\"AdminMenu_delBtn__LcZEy\",\"modalSubmitButton\":\"AdminMenu_modalSubmitButton__lp4X-\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteProduct, updateProduct } from \"../../../redux/products/operations\";\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from './AdminMenu.module.css';\nimport { useState } from 'react';\nimport { PopUp } from \"components/PopUp/PopUp\";\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport axios from 'axios';\nimport { selectAllComponents } from \"../../../redux/components/selectors\";\nimport Select from 'react-select';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nexport const AdminMenu = (id) => {\n\n    const dispatch = useDispatch();\n    const product = useSelector(selectActiveProduct);\n    const components = useSelector(selectAllComponents).array;\n    const initialComponents = product.components.length >= 1 ? product.components : [''];\n    let componentList = [];\n    let initialComponentId = [];\n    let initialComponentQuantity = [];\n\n    try {\n    components.forEach((component) => {\n        componentList.push({value: component._id, label: `${component.name}/${component.units}`})\n    })} catch {\n    \n    }\n\n    try {\n    initialComponents.forEach((component) => {\n        initialComponentId.push(component.id);\n        initialComponentQuantity.push(component.quantity);\n    })} catch {\n    }\n\n    const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n    const [selectedComponents, setSelectedComponents] = useState([ ...initialComponentId ]);\n    const [selectedQuantity, setSelectedQuantity] = useState([ ...initialComponentQuantity ]);\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n    const handleDelete = () => {\n        dispatch(deleteProduct(id));\n    }\n\n    const openEditModal = () => {\n      setIsModalEditOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeEditModal = () => {\n      setIsModalEditOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n\n    const openDeleteModal = () => {\n      setIsDeleteModalOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeDeleteModal = () => {\n      setIsDeleteModalOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n    \n    const getSelectLabel = (id) => {\n        try {\n          const placeholder = componentList.find(c => c.value === id).label;\n           return placeholder\n        } catch {\n            return ('Select...')\n        }\n    };\n\n    const addComponentField = () => {\n        setSelectedComponents(prevState => [...prevState, '']);\n        setSelectedQuantity(prevState => [...prevState, '']);\n    };\n    \n    const removeComponentField = (componentId) => {\n        setSelectedComponents(prevState => prevState.filter(id => id !== componentId));\n        setSelectedQuantity(prevState => prevState.filter((_, i) => selectedComponents[i] !== componentId));\n    };\n\n    return (\n        <div>\n            <button onClick={openDeleteModal} className={css.btn}>Delete</button>\n            <button className={css.btn} onClick={openEditModal}>Edit</button>\n            <PopUp \n                isOpen={isModalEditOpen}\n                close={closeEditModal}\n                className={css.modalContent}\n                body={\n                    <>\n                        <p>Edit mode</p>\n                        <Formik\n                        initialValues={{\n                            name: product.name,\n                            dimensions: {\n                                width: product.dimensions.width,\n                                height: product.dimensions.height,\n                                depth: product.dimensions.depth\n                            },\n                            subscription: product.subscription,\n                            basePrice: product.basePrice,\n                            components: selectedComponents,\n                            quantity: selectedQuantity,\n                        }}\n                        onSubmit={async (values) => {\n                            try {\n                                let componentsArray = [];\n                                selectedComponents.forEach((component, index) => {\n                                    componentsArray.push({});\n                                    const componentId = component;\n                                    const quantity = selectedQuantity[index];\n                                    componentsArray[index].id = componentId;\n                                    componentsArray[index].quantity = quantity;\n                                })\n                                values.components = [ ...componentsArray ];\n                                delete values.quantity;\n                                dispatch(updateProduct({ ...id, ...values }));\n                                closeEditModal();\n                            } catch(error) {\n                                console.log(error);\n                            }\n                        }}\n                        >\n                        <Form className={css.formWrapper}>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"name\">Name</label>\n                                <Field className={css.field} id=\"name\" name=\"name\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.width\">Width</label>\n                                <Field className={css.field} id=\"dimensions.width\" name=\"dimensions.width\" placeholder=\"Width\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.depth\">Depth</label>\n                                <Field className={css.field} id=\"dimensions.depth\" name=\"dimensions.depth\" placeholder=\"Depth\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.height\">Height</label>\n                                <Field className={css.field} id=\"dimensions.height\" name=\"dimensions.height\" placeholder=\"Height\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"subscription\">Subscription</label>\n                                <Field className={css.field} id=\"subscription\" name=\"subscription\" placeholder=\"Subscription\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"basePrice\">Base price</label>\n                                <Field className={css.field} id=\"basePrice\" name=\"basePrice\" placeholder=\"12500\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <FieldArray\n                                    name=\"components\"\n                                    render={(arrayHelpers) => (\n                                        <div>\n                                        {selectedComponents.map((componentId, index) => (\n                                            <div key={componentId} className={css.inputArray}>\n                                            <Field component={Select} \n                                                className={css.selectComponent}\n                                                name={`components.${index}`} \n                                                onChange={e => setSelectedComponents(prevState => {\n                                                    const updatedComponents = [...prevState];\n                                                    updatedComponents[index] = e.value;\n                                                    return updatedComponents;\n                                                })}\n                                                options={componentList}\n                                                placeholder={getSelectLabel(componentId)}\n                                                >\n                                            </Field>\n                                            <Field \n                                            className={`${css.field} ${css.quantityField}`} \n                                            name={`quantity.${index}`}\n                                            value={selectedQuantity[index] || ''}\n                                            onChange={e => setSelectedQuantity(prevState => {\n                                                const updatedComponents = [...prevState];\n                                                updatedComponents[index] = e.target.value;\n                                                return updatedComponents;\n                                            })} \n                                            placeholder=\"Quantity\" />\n                                            {selectedComponents.length > 1 ? <button\n                                                className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => removeComponentField(componentId)}\n                                            >\n                                                -\n                                            </button> : <></>}\n                                            {index === selectedComponents.length - 1 && (\n                                                <button\n                                                    className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => addComponentField()}\n                                                >\n                                                +\n                                                </button>\n                                            )}\n                                            </div>\n                                        ))}\n                                        </div>\n                                    )}\n                                />  \n                            </div>\n                            <button type=\"submit\" className={`${css.btn} ${css.modalSubmitButton}`}>Submit</button>\n                        </Form>\n                        </Formik>\n                    </>\n                }\n            />\n            <PopUp \n                isOpen={isDeleteModalOpen}\n                close={closeDeleteModal}\n                body={\n                    <>\n                        <p>Are you sure???</p>\n                        <div className={css.delModalWrapper}>\n                            <button onClick={closeDeleteModal} className={css.btn}>Cancel</button>\n                            <button onClick={handleDelete} className={`${css.btn} ${css.delBtn}`}>Delete</button>\n                        </div>\n                    </>}\n            />\n        </div>\n    )\n}","import { selectAllComponents } from \"../../../redux/components/selectors\";\nimport { useSelector } from \"react-redux\";\n\nexport const ProductComponents = ({ components }) => {\n\n  const allComponentsArray = useSelector(selectAllComponents).array;\n\n  const targetComponent = (id) => {\n    const target = allComponentsArray.find((component) => (component._id === id));\n    return target;\n  };\n\n  try {\n    return (\n        <>\n            <p>Product components:</p>\n            <ul>\n            {components.map(component => \n                <li key={component.id}>\n                    <p>{`${targetComponent(component.id).name} - ${component.quantity} ${targetComponent(component.id).units}`}</p>\n                </li>\n            )}\n            </ul>\n        </>\n\n    )}catch {\n        return (\n            <p>not found</p>\n        )\n    }\n};","import { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from \"./ProductDetails.module.css\";\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { useAuth } from \"hooks\";\nimport { AdminMenu } from \"../AdminMenu/AdminMenu\";\nimport { ProductComponents } from \"../ProductComponents/ProductComponents\";\n\nconst bedSizes = [\n  { value: '140', label: '140 x 200(190)' },\n  { value: '160', label: '160 x 200(190)' },\n  { value: '180', label: '180 x 200(190)' },\n  { value: '200', label: '200 x 200(190)' },\n];\n\nexport const ProductDetails = () => {\n\n    const { user, isLoggedIn } = useAuth();\n    const [selectedBedSize, setSelectedBedSize] = useState({ value: '160', label: '160 x 200(190)' });\n    const { id } = useParams();\n    const product = useSelector(selectActiveProduct);\n    const differenceInWidth = product.dimensions.width - 160;\n    const price = product.basePrice;\n\n    return(\n        <div className={css.section}>\n            <h1 className={css.title}>{product.name}</h1>\n            <Carousel showIndicators={false}>\n                {product.images.map((link) => (\n                    <div key={link}>\n                        <img src={link} alt={product.name}/>\n                    </div>\n                ))}\n            </Carousel>\n            {product.group === 'bed' ? \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>Sleeping area:</p>\n                    <Select\n                        defaultValue={selectedBedSize}\n                        onChange={setSelectedBedSize}\n                        options={bedSizes}\n                    />\n                    <p className={css.baseInfoTitle}>Overall size:</p>\n                    <p>{Number(selectedBedSize.value) + Number(differenceInWidth)} x {product.dimensions.depth}({product.dimensions.depth-10})</p>\n                    <p className={css.baseInfoTitle}>Price:</p>\n                    <p className={css.price}>{price} ₴</p>\n                </div> : \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>Overall size:</p>\n                    <p>{product.dimensions.depth} x {product.dimensions.width} x {product.dimensions.height}</p>\n                    <p className={css.baseInfoTitle}>Price:</p>\n                    <p className={css.price}>{product.basePrice} ₴</p>\n                </div>}\n            <p className={css.baseInfoTitle}>Description:</p>\n            <p>{product.subscription}</p>\n            {isLoggedIn ? \n                (user.subscription === \"administrator\" && (\n            <div>\n                <ProductComponents components={product.components}/>\n                <AdminMenu id={id}/>\n            </div>\n            )) : <></>}\n        </div>\n    )\n}","import { ProductDetails } from \"components/OurProducts/ProductDetails/ProductDetails\"\n\nexport default function Product () {\n    return (\n        <ProductDetails/>\n    )\n}","export const selectAllComponents = state => state.components.items;\n","export const selectAllProducts = state => state.products.items;\nexport const selectActiveProduct = state => state.products.activeItem;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","axios","process","AdminMenu","id","dispatch","useDispatch","product","useSelector","selectActiveProduct","components","selectAllComponents","array","initialComponents","length","componentList","initialComponentId","initialComponentQuantity","forEach","component","push","value","_id","label","name","units","quantity","useState","isModalEditOpen","setIsModalEditOpen","selectedComponents","setSelectedComponents","selectedQuantity","setSelectedQuantity","isDeleteModalOpen","setIsDeleteModalOpen","closeEditModal","document","classList","remove","closeDeleteModal","getSelectLabel","find","c","add","initialValues","dimensions","height","depth","subscription","basePrice","onSubmit","values","componentsArray","index","componentId","updateProduct","error","console","log","htmlFor","placeholder","render","arrayHelpers","map","Select","onChange","e","prevState","updatedComponents","options","target","filter","_","i","removeComponentField","deleteProduct","ProductComponents","allComponentsArray","targetComponent","bedSizes","ProductDetails","useAuth","user","isLoggedIn","selectedBedSize","setSelectedBedSize","useParams","differenceInWidth","price","showIndicators","images","link","src","alt","group","defaultValue","Number","Product","state","items","selectAllProducts","products","activeItem"],"sourceRoot":""}