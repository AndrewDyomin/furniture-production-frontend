{"version":3,"file":"static/js/814.c72acf8d.chunk.js","mappings":"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","sources":["components/OurProducts/Konvas/Frao.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Stage, Layer, Rect, Line, Text } from 'react-konva';\n\nexport default function Frao({\n  dimensions,\n  productWidth,\n  productDepth,\n  mattressWidth,\n  mattressDepth,\n  headDepth,\n  setHeadDepth,\n  tsargWidth,\n  setTsargWidth\n}) {\n\n  const [scaleFactor, setScaleFactor] = useState(1);\n\n  const bedTotalDepth = productDepth * scaleFactor;\n  const bedTotalWidth = productWidth * scaleFactor;\n\n  const sleepingWidth = (mattressWidth + 1) * scaleFactor;\n  const sleepingDepth = (mattressDepth + 2) * scaleFactor;\n\n  const head = headDepth * scaleFactor;\n  const tsarg = tsargWidth * scaleFactor;\n\n  const offsetX = dimensions.width / 2;\n  const offsetY = dimensions.height / 2;\n\n  useEffect(() => {\n    const value = Math.min(\n      (0.7 * dimensions.width) / productWidth,\n      (0.7 * dimensions.height) / productDepth\n    );\n    if (value > 0) {\n      setScaleFactor(value);\n    }\n  }, [dimensions, productWidth, productDepth]);\n\n  useEffect(() => {\n    setHeadDepth(10);\n    setTsargWidth(7);\n  }, [setHeadDepth, setTsargWidth])\n\n  return (\n    <div>\n      <Stage width={dimensions.width} height={dimensions.height}>\n        <Layer>\n            {/* Head */}\n          <Rect\n            x={offsetX - (bedTotalWidth / 2)}\n            y={offsetY - (bedTotalDepth / 2)}\n            width={bedTotalWidth}\n            height={head}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n          {/* Out */}\n          <Rect\n            x={offsetX - (sleepingWidth / 2) - tsarg}\n            y={offsetY - (bedTotalDepth / 2) + (head)}\n            width={sleepingWidth + (tsarg * 2)}\n            height={sleepingDepth + tsarg}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={5}\n          />\n          {/* In */}\n          <Rect\n            x={offsetX - (sleepingWidth / 2)}\n            y={offsetY - (bedTotalDepth / 2) + (head)}\n            width={sleepingWidth}\n            height={sleepingDepth}\n            stroke=\"black\"\n            strokeWidth={1}\n          />\n          {/* Mattress */}\n          <Rect\n            x={offsetX - ((mattressWidth * scaleFactor) / 2)}\n            y={offsetY - (bedTotalDepth / 2) + head + scaleFactor}\n            width={mattressWidth * scaleFactor}\n            height={mattressDepth * scaleFactor}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={8}\n          />\n        </Layer>\n        <Layer>\n          <Line\n            points={[\n              offsetX + 50,\n              offsetY + (bedTotalDepth / 2) + (17 * scaleFactor),\n              offsetX + (bedTotalWidth / 2),\n              offsetY + (bedTotalDepth / 2) + (17 * scaleFactor),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - 50,\n              offsetY + (bedTotalDepth / 2) + (17 * scaleFactor),\n              offsetX - (bedTotalWidth / 2),\n              offsetY + (bedTotalDepth / 2) + (17 * scaleFactor),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - 50}\n            y={offsetY + (bedTotalDepth / 2) + (17 * scaleFactor) - 9}\n            text={productWidth}\n            width={100}\n            align=\"center\"\n            fontSize={18}\n          />\n          <Line\n            points={[\n              offsetX - (bedTotalWidth / 1.7),\n              offsetY - (bedTotalDepth / 2),\n              offsetX - (bedTotalWidth / 1.7),\n              offsetY - 50,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - (bedTotalWidth / 1.7),\n              offsetY + 50,\n              offsetX - (bedTotalWidth / 1.7),\n              offsetY + (bedTotalDepth / 2),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - (bedTotalWidth / 1.7) - 9}\n            y={offsetY + 50}\n            text={productDepth}\n            width={100}\n            align=\"center\"\n            rotation={270}\n            fontSize={18}\n          />\n        </Layer>\n        <Layer>\n          <Line\n            points={[\n              offsetX + 50,\n              offsetY + (bedTotalDepth / 2) - tsarg - (10 * scaleFactor),\n              offsetX + (sleepingWidth / 2) - (10 * scaleFactor),\n              offsetY + (bedTotalDepth / 2) - tsarg - (10 * scaleFactor),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - 50,\n              offsetY + (bedTotalDepth / 2) - tsarg - (10 * scaleFactor),\n              offsetX - (sleepingWidth / 2) + (10 * scaleFactor),\n              offsetY + (bedTotalDepth / 2) - tsarg - (10 * scaleFactor),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - 50}\n            y={offsetY + (bedTotalDepth / 2) - tsarg - (10 * scaleFactor) - 9}\n            text={mattressWidth}\n            width={100}\n            align=\"center\"\n            fontSize={18}\n          />\n          <Line\n            points={[\n              offsetX - (sleepingWidth / 2) + (10 * scaleFactor),\n              offsetY - (bedTotalDepth / 2) + head + scaleFactor + (10 * scaleFactor),\n              offsetX - (sleepingWidth / 2) + (10 * scaleFactor),\n              offsetY - 50,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - (sleepingWidth / 2) + (10 * scaleFactor),\n              offsetY + 50,\n              offsetX - (sleepingWidth / 2) + (10 * scaleFactor),\n              offsetY + (bedTotalDepth / 2) - tsarg - (10 * scaleFactor),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - (sleepingWidth / 2) + (10 * scaleFactor) - 9}\n            y={offsetY + 50}\n            text={mattressDepth}\n            width={100}\n            align=\"center\"\n            rotation={270}\n            fontSize={18}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"names":["Frao","dimensions","productWidth","productDepth","mattressWidth","mattressDepth","headDepth","setHeadDepth","tsargWidth","setTsargWidth","useState","scaleFactor","setScaleFactor","bedTotalDepth","bedTotalWidth","sleepingWidth","sleepingDepth","head","tsarg","offsetX","width","offsetY","height","useEffect","value","Math","min","x","y","stroke","strokeWidth","cornerRadius","points","closed","text","align","fontSize","rotation"],"sourceRoot":""}