{"version":3,"file":"static/js/253.d91a01ac.chunk.js","mappings":"2OAGe,SAASA,EAAT,GAIX,IAHFC,EAGC,EAHDA,WACAC,EAEC,EAFDA,aACAC,EACC,EADDA,aAEA,GAAsCC,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAiBJ,EAAeE,EAChCG,EAAiBN,EAAeG,EAEhCI,EAAUR,EAAWS,MAAQ,EAC7BC,EAAUV,EAAWW,OAAS,EAYpC,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,KAAKC,IAChB,GAAMf,EAAWS,MAASR,EAC1B,GAAMD,EAAWW,OAAUT,GAE1BW,EAAQ,GACVR,EAAeQ,EAElB,GAAE,CAACb,EAAYC,EAAcC,KAG5B,0BACE,UAAC,KAAD,CAAOO,MAAOT,EAAWS,MAAOE,OAAQX,EAAWW,OAAnD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEK,EAAGR,EAAWD,EAAiB,EAC/BU,EAAGP,EAAWJ,EAAiB,EAC/BG,MAAOF,EACPI,OAAQ,GAAKP,EACbc,OAAO,QACPC,YAAa,EACbC,aAAc,KAEhB,SAAC,KAAD,CACEJ,EAAGR,EAAWD,EAAiB,EAC/BU,EAAGP,EAAWJ,EAAiB,EAAM,GAAKF,EAC1CK,MAAOF,EACPI,OAAQL,EAAkB,GAAKF,EAC/Bc,OAAO,QACPC,YAAa,EACbC,aAAc,QAGlB,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,OAAQ,CACNb,EAAU,GACVE,EAAWJ,EAAiB,IAC5BE,EAAWD,EAAiB,EAC5BG,EAAWJ,EAAiB,KAE9BY,OAAO,QACPC,YAAa,EACbG,QAAQ,KAEV,SAAC,KAAD,CACED,OAAQ,CACNb,EAAU,GACVE,EAAWJ,EAAiB,IAC5BE,EAAWD,EAAiB,EAC5BG,EAAWJ,EAAiB,KAE9BY,OAAO,QACPC,YAAa,EACbG,QAAQ,KAEV,SAAC,KAAD,CACEN,EAAGR,EAAU,GACbS,EAAGP,EAAWJ,EAAiB,IAAO,EACtCiB,KAAMtB,EACNQ,MAAO,IACPe,MAAM,SACNC,SAAU,MAEZ,SAAC,KAAD,CACEJ,OAAQ,CACNb,EAAWD,EAAiB,IAC5BG,EAAWJ,EAAiB,EAC5BE,EAAWD,EAAiB,IAC5BG,EAAU,IAEZQ,OAAO,QACPC,YAAa,EACbG,QAAQ,KAEV,SAAC,KAAD,CACED,OAAQ,CACNb,EAAWD,EAAiB,IAC5BG,EAAU,GACVF,EAAWD,EAAiB,IAC5BG,EAAWJ,EAAiB,GAE9BY,OAAO,QACPC,YAAa,EACbG,QAAQ,KAEV,SAAC,KAAD,CACEN,EAAGR,EAAWD,EAAiB,IAAO,EACtCU,EAAGP,EAAU,GACba,KAAMrB,EACNO,MAAO,IACPe,MAAM,SACNE,SAAU,IACVD,SAAU,YAMrB,C","sources":["components/OurProducts/Konvas/Hugo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Stage, Layer, Rect, Line, Text } from 'react-konva';\n\nexport default function Hugo({\n  dimensions,\n  productWidth,\n  productDepth,\n}) {\n  const [scaleFactor, setScaleFactor] = useState(1);\n\n  const sofaTotalDepth = productDepth * scaleFactor;\n  const sofaTotalWidth = productWidth * scaleFactor;\n\n  const offsetX = dimensions.width / 2;\n  const offsetY = dimensions.height / 2;\n\n  useEffect(() => {\n    const value = Math.min(\n      (0.7 * dimensions.width) / productWidth,\n      (0.7 * dimensions.height) / productDepth\n    );\n    if (value > 0) {\n      setScaleFactor(value);\n    }\n  }, [dimensions, productWidth, productDepth]);\n\n  return (\n    <div>\n      <Stage width={dimensions.width} height={dimensions.height}>\n        <Layer>\n          <Rect\n            x={offsetX - (sofaTotalWidth / 2)}\n            y={offsetY - (sofaTotalDepth / 2)}\n            width={sofaTotalWidth}\n            height={20 * scaleFactor}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n          <Rect\n            x={offsetX - (sofaTotalWidth / 2)}\n            y={offsetY - (sofaTotalDepth / 2) + (20 * scaleFactor)}\n            width={sofaTotalWidth}\n            height={sofaTotalDepth - (20 * scaleFactor)}\n            stroke=\"black\"\n            strokeWidth={1}\n            cornerRadius={3}\n          />\n        </Layer>\n        <Layer>\n          <Line\n            points={[\n              offsetX + 50,\n              offsetY + (sofaTotalDepth / 1.4),\n              offsetX + (sofaTotalWidth / 2),\n              offsetY + (sofaTotalDepth / 1.4),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - 50,\n              offsetY + (sofaTotalDepth / 1.4),\n              offsetX - (sofaTotalWidth / 2),\n              offsetY + (sofaTotalDepth / 1.4),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - 50}\n            y={offsetY + (sofaTotalDepth / 1.4) - 9}\n            text={productWidth}\n            width={100}\n            align=\"center\"\n            fontSize={18}\n          />\n          <Line\n            points={[\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY - (sofaTotalDepth / 2),\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY - 50,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY + 50,\n              offsetX - (sofaTotalWidth / 1.7),\n              offsetY + (sofaTotalDepth / 2),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX - (sofaTotalWidth / 1.7) - 9}\n            y={offsetY + 50}\n            text={productDepth}\n            width={100}\n            align=\"center\"\n            rotation={270}\n            fontSize={18}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"names":["Hugo","dimensions","productWidth","productDepth","useState","scaleFactor","setScaleFactor","sofaTotalDepth","sofaTotalWidth","offsetX","width","offsetY","height","useEffect","value","Math","min","x","y","stroke","strokeWidth","cornerRadius","points","closed","text","align","fontSize","rotation"],"sourceRoot":""}