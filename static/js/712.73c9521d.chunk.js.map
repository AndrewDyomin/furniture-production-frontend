{"version":3,"file":"static/js/712.73c9521d.chunk.js","mappings":"gQACA,EAA0B,uBAA1B,EAA0D,sBAA1D,EAA8F,2BAA9F,EAAqI,yBAArI,EAA8K,6BAA9K,EAAyN,2B,SCG5MA,EAAQ,SAAC,GAAY,IAAVC,EAAS,EAATA,GAGhBC,GADSC,EAAAA,EAAAA,IAAYC,EAAAA,GACNC,eAAeC,MAAK,SAACC,GAAQ,OAAOA,EAAGC,MAAQP,CAAI,IAClEQ,EAAO,IAAIC,KAAKR,EAAMS,iBAE5B,OACE,iBAAKC,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA2BX,EAAMY,UACjC,iBAAKF,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA8BX,EAAMa,QACpC,cAAGH,UAAWC,EAAd,mBAAqCJ,EAAKO,UAA1C,YAAuDP,EAAKQ,WAAW,EAAvE,YAA4ER,EAAKS,kBACjF,cAAGN,UAAWC,EAAd,SAAgCX,EAAMiB,cAI7C,ECnBD,GAAgB,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,+BCK/EC,EAAa,WACxB,IAAMC,GAASlB,EAAAA,EAAAA,IAAYC,EAAAA,GAE3B,OACE,gBAAKQ,UAAWC,EAAAA,UAAhB,SACuB,IAAlBQ,EAAOC,QACJ,eAAIV,UAAWC,EAAAA,KAAf,SACKQ,EAAOhB,eAAekB,KAAI,gBAAGf,EAAH,EAAGA,IAAH,OAC3B,eAAcI,UAAWC,EAAAA,KAAzB,UACE,SAAC,KAAD,CAAMW,GAAE,UAAKhB,GAAOI,UAAWC,EAAAA,UAA/B,UACE,SAACb,EAAD,CACAC,GAAIO,OAHCA,EADkB,OAS/B,iDAIX,ECnBc,SAASiB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYzB,EAAAA,EAAAA,IAAY0B,EAAAA,GAM9B,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,KACV,GAAE,CAACL,KAGF,+BACA,UAAC,KAAD,YACI,SAAC,KAAD,WACI,8CAEJ,yBAAME,GAAa,4BACnB,SAACR,EAAD,QAKP,C,8EC3BM,IAAMhB,EAAkB,SAAA4B,GAAK,OAAIA,EAAMX,OAAOY,KAAjB,EACvBJ,EAAgB,SAAAG,GAAK,OAAIA,EAAMX,OAAOa,OAAjB,C","sources":["webpack://furniture-production-frontend/./src/components/Order/Order.module.css?cfb9","components/Order/Order.js","webpack://furniture-production-frontend/./src/components/OrdersList/OrdersList.module.css?97e3","components/OrdersList/OrdersList.js","pages/Orders.js","redux/orders/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Order_wrapper__hSe-H\",\"number\":\"Order_number__YkUyJ\",\"discription\":\"Order_discription__O8Cz6\",\"orderName\":\"Order_orderName__2RZDO\",\"orderDeadline\":\"Order_orderDeadline__N6MRk\",\"orderDealer\":\"Order_orderDealer__Dw2lE\"};","import css from './Order.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectAllOrders } from '../../redux/orders/selectors';\n\nexport const Order = ({ id }) => {\n\n  const orders = useSelector(selectAllOrders);\n  const order = orders.allOrdersArray.find((el) => {return(el._id === id)});\n  const date = new Date(order.plannedDeadline);\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.number}>{order.number}</p>\n      <div className={css.discription}>\n        <p className={css.orderName}>{order.name}</p>\n        <p className={css.orderDeadline}>{`${date.getDate()}.${date.getMonth()+1}.${date.getFullYear()}`}</p>\n        <p className={css.orderDealer}>{order.dealer}</p>\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"OrdersList_list__QGi1g\",\"item\":\"OrdersList_item__AQirm\",\"orderLink\":\"OrdersList_orderLink__1O6g2\"};","import { useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { Order } from '../Order/Order';\nimport { selectAllOrders } from '../../redux/orders/selectors';\nimport css from './OrdersList.module.css';\n\nexport const OrdersList = () => {\n  const orders = useSelector(selectAllOrders);\n\n  return (\n    <div className={css.container}>\n        {orders.length !== 0 ? \n            <ul className={css.list}>\n                {orders.allOrdersArray.map(({ _id }) => (\n                <li key={_id} className={css.item}>\n                  <Link to={`${_id}`} className={css.orderLink}>\n                    <Order  \n                    id={_id} />\n                  </Link>\n                </li>\n            ))}\n            </ul> : \n            <p>Orders is not loaded</p>\n        }\n    </div >\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { fetchAllOrders } from '../redux/orders/operations';\nimport { selectLoading } from '../redux/orders/selectors';\nimport { OrdersList } from '../components/OrdersList/OrdersList';\n\nexport default function Orders() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchAllOrders());\n  }, [dispatch]);\n\n  return (\n    <>\n    <HelmetProvider>\n        <Helmet>\n            <title>Your orders</title>\n        </Helmet>\n        <div>{isLoading && 'Request in progress...'}</div>\n        <OrdersList />\n    </HelmetProvider>\n\n    </>\n  );\n}","export const selectAllOrders = state => state.orders.items;\nexport const selectLoading = state => state.orders.loading;"],"names":["Order","id","order","useSelector","selectAllOrders","allOrdersArray","find","el","_id","date","Date","plannedDeadline","className","css","number","name","getDate","getMonth","getFullYear","dealer","OrdersList","orders","length","map","to","Orders","dispatch","useDispatch","isLoading","selectLoading","useEffect","fetchAllOrders","state","items","loading"],"sourceRoot":""}