{"version":3,"file":"static/js/712.2547680c.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/Order/Order.module.css?cfb9","components/Order/Order.js","webpack://furniture-production-frontend/./src/components/OrdersList/OrdersList.module.css?97e3","components/OrdersList/OrdersList.js","pages/Orders.js","redux/orders/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Order_wrapper__hSe-H\",\"onePart\":\"Order_onePart__z8EQC\",\"twoPart\":\"Order_twoPart__kW2Wj\",\"done\":\"Order_done__PAJ0w\",\"number\":\"Order_number__YkUyJ\",\"discription\":\"Order_discription__O8Cz6\",\"orderName\":\"Order_orderName__2RZDO\",\"orderDeadline\":\"Order_orderDeadline__N6MRk\",\"orderFabric\":\"Order_orderFabric__Dd6Qe\",\"orderDealer\":\"Order_orderDealer__Dw2lE\",\"backgroundBlue\":\"Order_backgroundBlue__WKiIX\",\"backgroundGreen\":\"Order_backgroundGreen__-mewF\"};","import css from './Order.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectAllOrders } from '../../redux/orders/selectors';\nimport { selectUser } from '../../redux/auth/selectors';\n\nexport const Order = ({ id }) => {\n\n  const orders = useSelector(selectAllOrders);\n  const order = orders.allOrdersArray.find((el) => {return(el._id === id)});\n  const date = new Date(order.plannedDeadline);\n  const user = useSelector(selectUser);\n  let fabricClassName = css.orderFabric;\n  let wrapperClassName = css.wrapper;\n\n  if (order.fabricStatus === 'ordered') {\n    fabricClassName = `${css.orderFabric} ${css.backgroundBlue}`\n  } else if (order.fabricStatus === 'received') {\n    fabricClassName = `${css.orderFabric} ${css.backgroundGreen}`\n  }\n\n  if (order.orderStatus === 'TRUE') {\n    wrapperClassName = `${css.wrapper} ${css.done}`;\n  } else if (order.coverStatus === 'TRUE' && order.frameStatus === 'TRUE') {\n    wrapperClassName = `${css.wrapper} ${css.twoPart}`;\n  } else if (order.coverStatus === 'TRUE' || order.frameStatus === 'TRUE') {\n    wrapperClassName = `${css.wrapper} ${css.onePart}`;\n  }  \n\n  return (\n    <div className={wrapperClassName}>\n      <p className={css.number}>{order.number}</p>\n      <div className={css.discription}>\n        <p className={css.orderName}>{order.name}</p>\n        {user.description === 'administrator' || user.description === 'seamstress' ? \n        <p className={fabricClassName}>{order.fabric}</p> : <></>}\n        <p className={css.orderDeadline}>{`${date.getDate()}.${date.getMonth()+1}.${date.getFullYear()}`}</p>\n        <p className={css.orderDealer}>{order.dealer}</p>\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"OrdersList_list__QGi1g\",\"item\":\"OrdersList_item__AQirm\",\"orderLink\":\"OrdersList_orderLink__1O6g2\",\"navigation\":\"OrdersList_navigation__3Rmp5\",\"addOrderBtn\":\"OrdersList_addOrderBtn__vAwBs\",\"formWrapper\":\"OrdersList_formWrapper__D+6CQ\",\"formItem\":\"OrdersList_formItem__EveLI\",\"label\":\"OrdersList_label__mx1aV\",\"field\":\"OrdersList_field__b6Rcj\",\"formError\":\"OrdersList_formError__FYCQa\",\"btn\":\"OrdersList_btn__vek9I\"};","import { useSelector, useDispatch } from 'react-redux';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Order } from '../Order/Order';\nimport { PopUp } from '../PopUp/PopUp';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { useTranslation } from 'react-i18next';\nimport { selectAllOrders, selectLoading } from '../../redux/orders/selectors';\nimport { setActiveOrder, fetchAllOrders } from '../../redux/orders/operations';\nimport css from './OrdersList.module.css';\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { selectUser } from '../../redux/auth/selectors';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nexport const OrdersList = () => {\n  const { t } = useTranslation();\n  const groups = [\n    { value: `${t('sofa')}`, label: `${t('sofa')}` },\n    { value: `${t('bed')}`, label: `${t('bed')}` },\n    { value: `${t('kitchen banquette')}`, label: `${t('kitchen banquette')}` },\n    { value: `${t('pouf')}`, label: `${t('pouf')}` },\n  ];\n\n  const sleepSizes = [\n    { value: '160 x 200', label: '160 x 200' },\n    { value: '180 x 200', label: '180 x 200' },\n    { value: '200 x 200', label: '200 x 200' },\n    { value: '160 x 190', label: '160 x 190' },\n    { value: '180 x 190', label: '180 x 190' },\n    { value: '200 x 190', label: '200 x 190' },\n    { value: '90 x 200', label: '90 x 200' },\n    { value: '120 x 200', label: '120 x 200' },\n    { value: '140 x 200', label: '140 x 200' },\n    { value: '90 x 190', label: '90 x 190' },\n    { value: '120 x 190', label: '120 x 190' },\n    { value: '140 x 190', label: '140 x 190' },\n  ];\n\n  const [filter, setFilter] = useState('');\n  const [isModalOrderOpen, setIsModalOrderOpen] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState({\n    value: `${t('sofa')}`,\n    label: `${t('sofa')}`,\n  });\n  const [selectedSleepSizes, setSelectedSleepSizes] = useState({\n    value: '160 x 200',\n    label: '160 x 200',\n  });\n  const [selectedFiles, setSelectedFiles] = useState('');\n  const [isPending, setIsPending] = useState(false);\n\n  const location = useLocation();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const orders = useSelector(selectAllOrders);\n  let dealerNames = [];\n  let prefilteredOrders = orders.allOrdersArray;\n  const filters = [{ value: '', label: 'All' }];\n\n  if (orders.allOrdersArray) {\n    orders.allOrdersArray.forEach((order, index) => {\n      dealerNames.push({ value: `${order.dealer}`, label: `${order.dealer}` });\n    });\n    dealerNames.forEach(item => {\n      if (\n        !filters.some(\n          obj => obj.value.toLowerCase() === item.value.toLowerCase()\n        )\n      ) {\n        filters.push(item);\n      }\n    });\n  }\n\n  if (user.description === 'seamstress') {\n    prefilteredOrders =\n      orders.allOrdersArray && orders.allOrdersArray.length !== 0\n        ? orders.allOrdersArray.filter(order => order.coverStatus !== 'TRUE')\n        : [];\n  }\n\n  if (user.description === 'carpenter') {\n    prefilteredOrders =\n      orders.allOrdersArray && orders.allOrdersArray.length !== 0\n        ? orders.allOrdersArray.filter(order => order.frameStatus !== 'TRUE')\n        : [];\n  }\n\n  if (user.description === 'upholsterer') {\n    prefilteredOrders =\n      orders.allOrdersArray && orders.allOrdersArray.length !== 0\n        ? orders.allOrdersArray.filter(order => order.orderStatus !== 'TRUE')\n        : [];\n  }\n\n  const filteredOrders =\n    prefilteredOrders && prefilteredOrders.length !== 0\n      ? prefilteredOrders.filter(order =>\n          order.dealer.toLowerCase().includes(filter.toLowerCase())\n        )\n      : [];\n\n  const openOrderModal = () => {\n    setIsModalOrderOpen(true);\n    document.body.classList.add('modal-open');\n  };\n\n  const closeOrderModal = () => {\n    setIsModalOrderOpen(false);\n    document.body.classList.remove('modal-open');\n  };\n\n  const handleFileChange = event => {\n    setSelectedFiles([...event.target.files]);\n  };\n\n  const NewOrderSchema = Yup.object().shape({\n    group: Yup.string().required('Required'),\n    name: Yup.string().required('Required'),\n    size: Yup.string().required('Required'),\n    fabric: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    number: Yup.string().required('Required'),\n    adress: Yup.string(),\n    rest: Yup.string(),\n    deadline: Yup.number()\n      .min(10, 'Too Short!')\n      .max(60, 'Too Long!')\n      .required('Required'),\n  });\n\n  return (\n    <div className={css.container}>\n      <div className={css.navigation}>\n        <Select\n          className={css.filter}\n          name=\"filter\"\n          id=\"filter\"\n          onChange={e => setFilter(e.value)}\n          options={filters}\n          defaultValue={filter}\n          placeholder={t('filter')}\n        ></Select>\n        <button\n          className={`${css.btn} ${css.addOrderBtn}`}\n          onClick={openOrderModal}\n        >\n          {t('add order')}\n        </button>\n      </div>\n      {isLoading ? (\n        <PulseLoader\n          color=\"#c8c19b\"\n          cssOverride={{\n            marginTop: '15px',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        />\n      ) : (\n        <></>\n      )}\n      {filteredOrders.length !== 0 ? (\n        <ul className={css.list}>\n          {filteredOrders.map(({ _id }) => (\n            <li key={_id} className={css.item}>\n              <Link\n                to={`${_id}`}\n                state={{ from: location }}\n                className={css.orderLink}\n                onClick={() =>\n                  dispatch(\n                    setActiveOrder(\n                      orders.allOrdersArray.find(el => {\n                        return el._id === _id;\n                      })\n                    )\n                  )\n                }\n              >\n                <Order id={_id} />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <></>\n      )}\n      <PopUp\n        isOpen={isModalOrderOpen}\n        close={closeOrderModal}\n        body={\n          <>\n            <div className={css.orderModalWrapper}>\n              <Formik\n                initialValues={{\n                  group: selectedGroup.value,\n                  name: '',\n                  size: '',\n                  fabric: '',\n                  description: '',\n                  number: '',\n                  adress: '',\n                  rest: '',\n                  deadline: '',\n                }}\n                validationSchema={NewOrderSchema}\n                onSubmit={async (values, { resetForm }) => {\n                  try {\n                    setIsPending(true);\n                    const formData = new FormData();\n                    formData.append('group', selectedGroup.value);\n                    formData.append('name', values.name);\n                    formData.append('size', values.size);\n                    formData.append('fabric', values.fabric);\n                    // eslint-disable-next-line\n                    {\n                      selectedGroup.value === 'bed'\n                        ? formData.append(\n                            'description',\n                            values.description +\n                              ` Спальное место ${selectedSleepSizes.value}`\n                          )\n                        : formData.append('description', values.description);\n                    }\n                    formData.append('number', values.number);\n                    formData.append('adress', values.adress);\n                    formData.append('rest', values.rest);\n                    formData.append('deadline', values.deadline);\n                    if (selectedFiles && selectedFiles.length !== 0) {\n                      selectedFiles.forEach(file => {\n                        formData.append('file', file);\n                      });\n                    }\n                    await axios.post('/orders/add', formData, {\n                      headers: {\n                        'Content-Type': 'multipart/form-data',\n                      },\n                    });\n                    toast.success('Order sended');\n                    resetForm();\n                    setIsPending(false);\n                    closeOrderModal();\n                    dispatch(fetchAllOrders());\n                  } catch (error) {\n                    toast.error(`${error.response.data.message}`);\n                  }\n                }}\n              >\n                {({ errors, touched }) => (\n                <Form className={css.formWrapper}>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"group\">{t('group')}</label>\n                    <Field\n                      component={Select}\n                      name=\"group\"\n                      id=\"group\"\n                      onChange={e => setSelectedGroup(e)}\n                      options={groups}\n                      defaultValue={selectedGroup.value}\n                      placeholder={selectedGroup.label}\n                    ></Field>\n                    {errors.group && touched.group ? (\n                      <div>{errors.group}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"name\">{t('order name')}</label>\n                    <Field\n                      className={errors.name && touched.name ? `${css.field} ${css.formError}` : css.field}\n                      id=\"name\"\n                      name=\"name\"\n                      placeholder=\"Faynee mini\"\n                    />\n                    {errors.name && touched.name ? (\n                      <div>{errors.name}</div>\n                    ) : null}\n                  </div>\n                  {selectedGroup.value === `${t('bed')}` ? (\n                    <div className={css.formItem}>\n                      <label htmlFor=\"sleepingArea\">{t('sleeping area')}</label>\n                      <Field\n                        component={Select}\n                        name=\"sleepingArea\"\n                        id=\"sleepingArea\"\n                        onChange={e => setSelectedSleepSizes(e)}\n                        options={sleepSizes}\n                        defaultValue={selectedSleepSizes.value}\n                        placeholder={selectedSleepSizes.value}\n                      ></Field>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                  <div className={css.formItem}>\n                    <label htmlFor=\"size\">{t('size')}</label>\n                    <Field\n                      className={errors.size && touched.size ? `${css.field} ${css.formError}` : css.field}\n                      id=\"size\"\n                      name=\"size\"\n                      placeholder={`${t('overall size')}`}\n                    />\n                    {errors.size && touched.size ? (\n                      <div>{errors.size}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"fabric\">{t('fabric')}</label>\n                    <Field\n                      className={errors.fabric && touched.fabric ? `${css.field} ${css.formError}` : css.field}\n                      id=\"fabric\"\n                      name=\"fabric\"\n                      placeholder={t('fabric name')}\n                    />\n                    {errors.fabric && touched.fabric ? (\n                      <div>{errors.fabric}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"description\">{t('description')}</label>\n                    <Field\n                      className={errors.description && touched.description ? `${css.field} ${css.formError}` : css.field}\n                      id=\"description\"\n                      name=\"description\"\n                      placeholder={t('description')}\n                    />\n                    {errors.description && touched.description ? (\n                      <div>{errors.description}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"number\">{t('number')}</label>\n                    <Field\n                      className={errors.number && touched.number ? `${css.field} ${css.formError}` : css.field}\n                      id=\"number\"\n                      name=\"number\"\n                      placeholder=\"125\"\n                    />\n                    {errors.number && touched.number ? (\n                      <div>{errors.number}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"adress\">{t('adress')}</label>\n                    <Field\n                      className={errors.adress && touched.adress ? `${css.field} ${css.formError}` : css.field}\n                      id=\"adress\"\n                      name=\"adress\"\n                      placeholder={t('Kiev, Kyrylivska street, 103')}\n                    />\n                    {errors.adress && touched.adress ? (\n                      <div>{errors.adress}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"rest\">{t('rest')}</label>\n                    <Field\n                      className={errors.rest && touched.rest ? `${css.field} ${css.formError}` : css.field}\n                      id=\"rest\"\n                      name=\"rest\"\n                      placeholder=\"21000\"\n                    />\n                    {errors.rest && touched.rest ? (\n                      <div>{errors.rest}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"deadline\">{t('deadline')}</label>\n                    <Field\n                      className={errors.deadline && touched.deadline ? `${css.field} ${css.formError}` : css.field}\n                      id=\"deadline\"\n                      name=\"deadline\"\n                      placeholder=\"21\"\n                    />\n                    {errors.deadline && touched.deadline ? (\n                      <div>{errors.deadline}</div>\n                    ) : null}\n                  </div>\n                  <div className={css.formItem}>\n                    <label htmlFor=\"files\">{t('add new images')}</label>\n                    <Field\n                      className={css.field}\n                      id=\"files\"\n                      name=\"files\"\n                      type=\"file\"\n                      onChange={handleFileChange}\n                      multiple\n                    />\n                  </div>\n                  <button type=\"submit\" className={css.btn}>\n                    {isPending ? (\n                      <PulseLoader color=\"#c8c19b\" size=\"10px\" />\n                    ) : (\n                      `${t('submit')}`\n                    )}\n                  </button>\n                </Form>\n                )}\n              </Formik>\n            </div>\n          </>\n        }\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { fetchAllOrders, setActiveOrder } from '../redux/orders/operations';\nimport { OrdersList } from '../components/OrdersList/OrdersList';\n\nexport default function Orders() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setActiveOrder({}));\n    dispatch(fetchAllOrders());\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n          <Helmet>\n              <title>Your orders</title>\n          </Helmet>\n          <OrdersList />\n      </HelmetProvider>\n    </>\n  );\n}","export const selectAllOrders = state => state.orders.items;\nexport const selectActiveOrder = state => state.orders.activeItem;\nexport const selectLoading = state => state.orders.isLoading;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","Order","id","order","useSelector","selectAllOrders","allOrdersArray","find","el","_id","date","Date","plannedDeadline","user","selectUser","fabricClassName","wrapperClassName","fabricStatus","orderStatus","coverStatus","frameStatus","number","name","description","fabric","getDate","getMonth","getFullYear","dealer","axios","process","OrdersList","t","useTranslation","groups","value","label","sleepSizes","useState","filter","setFilter","isModalOrderOpen","setIsModalOrderOpen","selectedGroup","setSelectedGroup","selectedSleepSizes","setSelectedSleepSizes","selectedFiles","setSelectedFiles","isPending","setIsPending","location","useLocation","dispatch","useDispatch","isLoading","selectLoading","orders","dealerNames","prefilteredOrders","filters","forEach","index","push","item","some","obj","toLowerCase","length","filteredOrders","includes","closeOrderModal","document","classList","remove","handleFileChange","event","target","files","NewOrderSchema","Yup","shape","group","required","size","adress","rest","deadline","min","max","onChange","e","options","defaultValue","placeholder","add","color","cssOverride","marginTop","map","to","state","from","setActiveOrder","initialValues","validationSchema","onSubmit","values","resetForm","formData","FormData","append","file","headers","toast","fetchAllOrders","response","data","message","errors","touched","htmlFor","component","Select","multiple","Orders","useEffect","items","selectActiveOrder","activeItem"],"sourceRoot":""}