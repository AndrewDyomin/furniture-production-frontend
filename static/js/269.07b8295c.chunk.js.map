{"version":3,"file":"static/js/269.07b8295c.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/CollectionEditor/CollectionEditor.module.css?fe36","components/CollectionEditor/CollectionEditor.js","webpack://furniture-production-frontend/./src/components/ComponentList/ComponentList.module.css?5aff","components/ComponentList/ComponentList.js","webpack://furniture-production-frontend/./src/components/MaterialsPlanner/MaterialsPlanner.module.css?8b8d","components/MaterialsPlanner/MaterialsPlanner.js","pages/MyRoom.js","redux/components/selectors.js","redux/orders/selectors.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CollectionEditor_wrapper__BODBf\",\"title\":\"CollectionEditor_title__K5kie\",\"titleArea\":\"CollectionEditor_titleArea__XDnvo\",\"openBtn\":\"CollectionEditor_openBtn__2KO2d\",\"openBtnIcon\":\"CollectionEditor_openBtnIcon__JoypF\",\"active\":\"CollectionEditor_active__2uyO7\",\"formWrapper\":\"CollectionEditor_formWrapper__GYzoj\",\"formItem\":\"CollectionEditor_formItem__qqpkN\",\"label\":\"CollectionEditor_label__MQZp3\",\"field\":\"CollectionEditor_field__XQu45\",\"quantityField\":\"CollectionEditor_quantityField__u3ybJ\",\"inputArray\":\"CollectionEditor_inputArray__Ospp1\",\"selectComponent\":\"CollectionEditor_selectComponent__CvOZ7\",\"minBtn\":\"CollectionEditor_minBtn__6g+Kk\",\"btn\":\"CollectionEditor_btn__PRioK\",\"error\":\"CollectionEditor_error__T-eMv\"};","import { Formik, Field, Form, FieldArray } from 'formik';\nimport { selectAllComponents } from \"../../redux/components/selectors\";\nimport axios from 'axios';\nimport svgIcons from '../../images/icons.svg';\nimport css from './CollectionEditor.module.css';\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nconst groups = [\n    { value: 'sofa', label: 'Sofa' },\n    { value: 'bed', label: 'Bed' },\n  ];\n\nexport const CollectionEditor = () => {\n\n    const components = useSelector(selectAllComponents);\n    const { t } = useTranslation();\n    let componentList = [];\n\n    try {\n    components.array.forEach((component) => {\n        componentList.push({value: component._id, label: `${component.name}/${component.units}`})\n    })\n    } catch {}\n\n    const [selectedGroup, setSelectedGroup] = useState({ value: 'sofa', label: 'Sofa' });\n    const [selectedFiles, setSelectedFiles] = useState('');\n    const [selectedComponents, setSelectedComponents] = useState([]);\n    const [isEditorOpen, setIsEditorOpen] = useState(false);\n\n    const handleFileChange = (event) => {\n        setSelectedFiles([ ...event.target.files ]);\n    };\n\n    const handleEditorOpen = (e) => {\n        isEditorOpen ? setIsEditorOpen(false) : setIsEditorOpen(true)\n        !isEditorOpen ? e.target.classList = css.active : e.target.classList = css.notActive;\n    };\n\n  return (\n    <div className={css.wrapper}>\n        <div className={css.titleArea}>\n            <p className={css.title}>Collection Editor</p>\n            <button className={css.openBtn} id=\"isOpen\" onClick={handleEditorOpen}>\n                <svg>\n                    <use className={css.openBtnIcon} href={`${svgIcons}#icon-arrow-down`} width={'32px'}/>\n                </svg>\n            </button>\n        </div>\n        {isEditorOpen ? \n        <Formik\n        initialValues={{\n            group: selectedGroup.value,\n            name: '',\n            dimensions: {\n                width: '',\n                height: '',\n                depth: ''\n            },\n            description: '',\n            basePrice: '',\n            images: [''],\n            components: [''],\n            quantity: [''],\n        }}\n        onSubmit={async (values, { resetForm }) => {\n            try {\n                const formData = new FormData();\n                formData.append('group', selectedGroup.value);\n                formData.append('name', values.name);\n                formData.append('dimensions[width]', values.dimensions.width);\n                formData.append('dimensions[height]', values.dimensions.height);\n                formData.append('dimensions[depth]', values.dimensions.depth);\n                formData.append('description', values.description);\n                formData.append('basePrice', values.basePrice);\n                selectedComponents.forEach((component, index) => {\n                    const componentId = selectedComponents[index];\n                    const quantity = values.quantity[index];\n                    formData.append(`components[${index}][id]`, componentId);\n                    formData.append(`components[${index}][quantity]`, quantity);\n                })\n                selectedFiles.forEach(file => {\n                    formData.append('file', file);\n                  });\n                await axios.post('/collections/add', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n                setSelectedComponents([]);\n                resetForm();\n            } catch(error) {\n                console.log(error);\n            }\n        }}\n        >\n        <Form className={css.formWrapper}>\n            <div className={css.formItem}>\n                <label htmlFor=\"group\">Group</label>\n                <Field component={Select} \n                    name=\"group\" \n                    id=\"group\"\n                    onChange={e => setSelectedGroup(e)}\n                    options={groups}\n                    defaultValue={selectedGroup.value}\n                    >\n                </Field>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"name\">Name</label>\n                <Field className={css.field} id=\"name\" name=\"name\" placeholder=\"Faynee mini\" />\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.width\">Width</label>\n                <Field className={css.field} id=\"dimensions.width\" name=\"dimensions.width\" placeholder=\"Width\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.depth\">Depth</label>\n                <Field className={css.field} id=\"dimensions.depth\" name=\"dimensions.depth\" placeholder=\"Depth\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.height\">Height</label>\n                <Field className={css.field} id=\"dimensions.height\" name=\"dimensions.height\" placeholder=\"Height\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"description\">Description</label>\n                <Field className={css.field} id=\"description\" name=\"description\" placeholder=\"Description\" />\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"basePrice\">Base price</label>\n                <Field className={css.field} id=\"basePrice\" name=\"basePrice\" placeholder=\"12500\" />\n            </div>\n            <div className={css.formItem}>\n                  <label htmlFor=\"files\">{t('add new images')}</label>\n                  <Field className={css.field} id=\"files\" name=\"files\" type=\"file\" onChange={handleFileChange} multiple/>\n                </div>\n            <div className={css.formItem}>\n                <FieldArray\n                    name=\"components\"\n                    render={(arrayHelpers) => (\n                        <div>\n                        {arrayHelpers.form.values.components.map((component, index) => (\n                            <div key={index} className={css.inputArray}>\n                            <Field component={Select} \n                                className={css.selectComponent}\n                                name={`components.${index}`} \n                                onChange={e => setSelectedComponents(prevState => {\n                                    const updatedComponents = [...prevState];\n                                    updatedComponents[index] = e.value;\n                                    return updatedComponents;\n                                  })}\n                                options={componentList}\n                                >\n                            </Field>\n                            <Field className={`${css.field} ${css.quantityField}`} name={`quantity.${index}`} placeholder=\"Quantity\" />\n                            {arrayHelpers.form.values.components.length > 1 ? <button\n                                className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => {arrayHelpers.remove(index);\n                                arrayHelpers.form.values.quantity.splice(index, 1)}}\n                            >\n                                -\n                            </button> : <></>}\n                            {index === arrayHelpers.form.values.components.length - 1 && (\n                                <button\n                                    className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => {arrayHelpers.push('');\n                                arrayHelpers.form.values.quantity.push('')}}\n                                >\n                                +\n                                </button>\n                            )}\n                            </div>\n                        ))}\n                        </div>\n                    )}\n                />  \n            </div>\n            <button type=\"submit\" className={css.btn}>Submit</button>\n        </Form>\n        </Formik>\n        : <></>}\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ComponentList_wrapper__giwUD\",\"title\":\"ComponentList_title__EfwIm\",\"titleArea\":\"ComponentList_titleArea__mSre9\",\"openBtn\":\"ComponentList_openBtn__JXZrR\",\"openBtnIcon\":\"ComponentList_openBtnIcon__81Ht3\",\"active\":\"ComponentList_active__b-xnh\",\"list\":\"ComponentList_list__nKaDk\",\"item\":\"ComponentList_item__rBpvr\",\"price\":\"ComponentList_price__b8Be0\",\"buttons\":\"ComponentList_buttons__MMPMv\",\"editBtn\":\"ComponentList_editBtn__8we70\",\"formItem\":\"ComponentList_formItem__tEUVD\",\"field\":\"ComponentList_field__+BOaR\",\"inputArray\":\"ComponentList_inputArray__tvYgw\",\"btn\":\"ComponentList_btn__9-6O+\",\"delBtn\":\"ComponentList_delBtn__uRtU-\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Formik, Field, Form } from 'formik';\nimport Select from 'react-select';\nimport { selectAllComponents } from \"../../redux/components/selectors\";\nimport { addComponent, deleteComponent, updateComponent } from \"../../redux/components/operations\";\nimport { PopUp } from \"../PopUp/PopUp\";\nimport svgIcons from '../../images/icons.svg';\nimport css from \"./ComponentList.module.css\";\n\nconst currencies = [\n    { value: 'USD', label: 'USD' },\n    { value: 'грн', label: 'грн' },\n  ];\nconst units = [\n    { value: 'шт', label: 'шт' },\n    { value: 'м', label: 'м' },\n    { value: 'кг', label: 'кг' },\n];\n\nlet editedComponent = {};\n\nexport const ComponentList = () => {\n\n    const components = useSelector(selectAllComponents);\n    const dispatch = useDispatch();\n    const [isListOpen, setIsListOpen] = useState(false);\n    const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n    const [selectedCurrency, setSelectedCurrency] = useState({value: 'грн', label: 'грн'});\n    const [selectedUnits, setSelectedUnits] = useState({value: 'шт.', label: 'шт'});\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n    const openDeleteModal = (component) => {\n      editedComponent = component;\n      setIsDeleteModalOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeDeleteModal = () => {\n      setIsDeleteModalOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n\n    const handleDelete = () => {\n        dispatch(deleteComponent(editedComponent._id));\n        closeDeleteModal();\n    }\n\n    const handleListOpen = (e) => {\n        isListOpen ? setIsListOpen(false) : setIsListOpen(true)\n        !isListOpen ? e.target.classList = css.active : e.target.classList = css.notActive;\n    };\n\n    const openEditModal = (component) => {\n        editedComponent = component;\n        setIsModalEditOpen(true);\n        document.body.classList.add('modal-open');\n      };\n    \n    const closeEditModal = () => {\n    setIsModalEditOpen(false);\n    document.body.classList.remove('modal-open');\n    };\n\n    const ComponentsArray = () => {\n        try {\n            return(\n            components.array.map((component) => (\n                <li key={component._id} className={css.item}>\n                    <p>{component.name}</p>\n                    <div>\n                        <p>{component.description}</p>\n                    </div>\n                    <div className={css.price}>\n                        <p>Price: {component.price}</p>\n                        <p>{component.currency}</p>\n                        <p>/{component.units}</p>\n                    </div>\n                    <div className={css.buttons}>\n                        <button className={css.editBtn} onClick={() => openEditModal(component)}>Edit</button>\n                        <button className={css.editBtn} onClick={() => openDeleteModal(component)}>Delete</button>\n                    </div>\n                </li>\n            )\n        ))} catch {\n            return (<></>)\n        }};\n\n    return (\n        <div className={css.wrapper}>\n            <div className={css.titleArea}>\n                <p className={css.title}>Component list</p>\n                <button className={css.openBtn} id=\"isOpen\" onClick={handleListOpen}>\n                    <svg>\n                        <use className={css.openBtnIcon} href={`${svgIcons}#icon-arrow-down`} width={'32px'}/>\n                    </svg>\n                </button>\n            </div>\n            {isListOpen ? \n            <div>\n                <ul className={css.list}>\n                    <ComponentsArray />\n                </ul>\n                <p className={css.title}>Add new component</p>\n                <Formik\n                initialValues={{         \n                    name: '',\n                    description: '',\n                    price: '',\n                    currency: selectedCurrency.value,\n                    units: selectedUnits.value, \n                }}\n                onSubmit={async (values, { resetForm }) => {\n                    try {\n                        const val = { ...values, currency: selectedCurrency.value, units: selectedUnits.value }\n                        dispatch(addComponent(val));\n                        resetForm();\n                    } catch(error) {\n                        console.log(error);\n                    }\n                }}\n                >\n                <Form className={css.formWrapper}>\n                    <div className={css.formItem}>\n                        <Field className={css.field} id=\"name\" name=\"name\" placeholder=\"Name\" />\n                    </div>\n                    <div className={css.formItem}>\n                        <Field className={css.field} id=\"description\" name=\"description\" placeholder=\"Description\" />\n                    </div>\n                    <div className={css.formItem}>\n                        <Field className={css.field} id=\"price\" name=\"price\" placeholder=\"Price\" />\n                    </div>\n                    <div className={css.formItem}>\n                        <label htmlFor=\"currency\">Currency</label>\n                        <Field component={Select} \n                                name=\"currency\" \n                                id=\"currency\"\n                                onChange={e => setSelectedCurrency(e)}\n                                options={currencies}\n                                defaultValue={selectedCurrency.value}\n                                >\n                        </Field>\n                    </div>\n                    <div className={css.formItem}>\n                        <label htmlFor=\"units\">Units</label>\n                        <Field component={Select} \n                                name=\"units\" \n                                id=\"units\"\n                                onChange={e => setSelectedUnits(e)}\n                                options={units}\n                                defaultValue={selectedUnits.value}\n                                >\n                        </Field>\n                    </div>\n                    <button type=\"submit\" className={css.btn}>Add component</button>\n                </Form>\n                </Formik>\n                <PopUp \n                    isOpen={isModalEditOpen}\n                    close={closeEditModal}\n                    body={\n                        <>\n                            <p>Edit mode</p>\n                            <Formik\n                            initialValues={{\n                                name: editedComponent.name,\n                                description: editedComponent.description,\n                                price: editedComponent.price,\n                                currency: editedComponent.currency,\n                                units: editedComponent.units,\n                            }}\n                            onSubmit={async (values) => {\n                                try {\n                                    const id = editedComponent._id;\n                                    dispatch(updateComponent({ id, ...values }));\n                                    closeEditModal();\n                                } catch(error) {\n                                    console.log(error);\n                                }\n                            }}\n                            >\n                            <Form className={css.formWrapper}>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"name\">Name</label>\n                                    <Field className={css.field} id=\"name\" name=\"name\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"description\">Description</label>\n                                    <Field className={css.field} id=\"description\" name=\"description\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"price\">Price</label>\n                                    <Field className={css.field} id=\"price\" name=\"price\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"currency\">Currency</label>\n                                    <Field className={css.field} id=\"currency\" name=\"currency\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"units\">Units</label>\n                                    <Field className={css.field} id=\"units\" name=\"units\"/>\n                                </div>\n                                <button type=\"submit\" className={css.btn}>Submit</button>\n                            </Form>\n                            </Formik>\n                        </>}\n                />\n                <PopUp \n                    isOpen={isDeleteModalOpen}\n                    close={closeDeleteModal}\n                    body={\n                        <>\n                            <p>Are you sure???</p>\n                            <div className={css.delModalWrapper}>\n                                <button onClick={closeDeleteModal} className={css.btn}>Cancel</button>\n                                <button onClick={handleDelete} className={`${css.btn} ${css.delBtn}`}>Delete</button>\n                            </div>\n                        </>}\n                />\n            </div> : <></>}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MaterialsPlanner_wrapper__7ermt\",\"title\":\"MaterialsPlanner_title__v30CY\",\"titleArea\":\"MaterialsPlanner_titleArea__mhSwo\",\"openBtn\":\"MaterialsPlanner_openBtn__MpFm6\",\"openBtnIcon\":\"MaterialsPlanner_openBtnIcon__Ph7bU\",\"active\":\"MaterialsPlanner_active__cAcZz\",\"formWrapper\":\"MaterialsPlanner_formWrapper__r8ilU\",\"formItem\":\"MaterialsPlanner_formItem__aGkIo\",\"label\":\"MaterialsPlanner_label__n5-PK\",\"field\":\"MaterialsPlanner_field__UdYBt\",\"quantityField\":\"MaterialsPlanner_quantityField__ceYjO\",\"inputArray\":\"MaterialsPlanner_inputArray__05+OX\",\"selectComponent\":\"MaterialsPlanner_selectComponent__VBfSc\",\"minBtn\":\"MaterialsPlanner_minBtn__2T8p+\",\"btn\":\"MaterialsPlanner_btn__L3waN\",\"error\":\"MaterialsPlanner_error__NWvNu\"};","import axios from 'axios';\nimport svgIcons from '../../images/icons.svg';\nimport css from './MaterialsPlanner.module.css';\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { selectAllComponents } from \"../../redux/components/selectors\";\nimport { selectAllOrders } from '../../redux/orders/selectors';\nimport { selectAllProducts } from '../../redux/products/selectors';\nimport { useSelector } from 'react-redux';\n// import toast from 'react-hot-toast';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nconst terms = [\n    { value: '7', label: '7 days' },\n    { value: '14', label: '14 days' },\n    { value: '21', label: '21 days' },\n  ];\n\nexport const MaterialsPlanner = () => {\n\n    const [selectedTerm, setSelectedTerm] = useState({ value: '14', label: '14 days' });\n    const [isEditorOpen, setIsEditorOpen] = useState(false);\n    const handleEditorOpen = (e) => {\n        isEditorOpen ? setIsEditorOpen(false) : setIsEditorOpen(true)\n        !isEditorOpen ? e.target.classList = css.active : e.target.classList = css.notActive;\n    };\n    const components = useSelector(selectAllComponents).array || [];\n    const orders = useSelector(selectAllOrders).allOrdersArray || [];\n    const products = useSelector(selectAllProducts).array || [];\n    let date = new Date();\n    let targetDate = new Date(date);\n    targetDate.setDate(date.getDate() + Number(selectedTerm.value));\n    const unsorted = [];\n\n    const getOrderList = () => {\n        const filteredOrders = orders.filter(order => Date.parse(order.plannedDeadline) <= Date.parse(targetDate))\n        return (filteredOrders)\n    }\n    const getComponentsList = () => {\n        let findedComponentsList = [];\n        getOrderList().forEach(order => {\n            const product = products.find(p => p.name.toLowerCase() === order.name.toLowerCase());\n            if (product) {\n                product.components.forEach((component) => {\n                    const target = components.find(c => c._id === component.id);\n                    if (target) {\n                        let targetComponent = { ...target, quantity: component.quantity };\n                        if (targetComponent._id !== '6602e794832f5a9bf2a2850a') {\n                            findedComponentsList.push(targetComponent);\n                        } else if (order.fabricStatus !== \"received\" && order.fabricStatus !== \"ordered\") {\n                            targetComponent.name = order.fabric;\n                            findedComponentsList.push(targetComponent);\n                        }\n                    }\n                });\n            } else {\n                unsorted.push(order);\n            }\n        });\n    \n        return findedComponentsList;\n    };\n\n  return (\n    <div className={css.wrapper}>\n        <div className={css.titleArea} key='titleArea'>\n            <p className={css.title}>Materials planner</p>\n            <button className={css.openBtn} id=\"isOpen\" onClick={handleEditorOpen}>\n                <svg>\n                    <use className={css.openBtnIcon} href={`${svgIcons}#icon-arrow-down`} width={'32px'}/>\n                </svg>\n            </button>\n        </div>\n        {isEditorOpen ? \n        <div className={css.formWrapper} key='listArea'>\n            <Select \n                name='term' \n                onChange={(e) => (setSelectedTerm(e))}\n                defaultValue={selectedTerm}\n                options={terms}\n            />\n            <p>Orders:</p>\n            <ul key='orders'>\n                {orders && orders.length !== 0 && getOrderList().map(order => (\n                    <li key={order._id}>\n                        <p>{order.number}, {order.name}</p>\n                    </li>\n                ))}\n            </ul>\n            <p>Components:</p>\n            <ul key='components'>\n                {orders && orders.length !== 0 && getComponentsList().map(component => (\n                    <li key={`${component._id}${component.name}-${component.quantity}`}>\n                        <p>{component.name}: {component.quantity} {component.units}</p>\n                    </li>\n                ))}\n            </ul>\n            <p>Unsorted:</p>\n            <ul key='unsorted'>\n                {unsorted && unsorted.length !== 0 && unsorted.map(order => (\n                    <li key={`${order.number}-${order.fabric}`}>\n                        <p>{order.name}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n        : <></>}\n    </div>\n  );\n};","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CollectionEditor } from '../components/CollectionEditor/CollectionEditor';\nimport { ComponentList } from '../components/ComponentList/ComponentList';\nimport { MaterialsPlanner } from '../components/MaterialsPlanner/MaterialsPlanner';\nimport { fetchAllComponents } from '../redux/components/operations';\nimport { fetchAllOrders } from '../redux/orders/operations';\nimport { fetchAllProducts } from '../redux/products/operations';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nexport default function MyRoom() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllComponents());\n    toast.success('All components fetched');\n    dispatch(fetchAllOrders());\n    toast.success('All orders fetched');\n    dispatch(fetchAllProducts());\n    toast.success('All products fetched');\n  }, [dispatch]);\n\n  return (\n    <>\n      <HelmetProvider>\n          <Helmet>\n              <title>My room</title>\n          </Helmet>\n          <h1>It's your private room</h1>\n          <CollectionEditor />\n          <ComponentList />\n          <MaterialsPlanner />\n      </HelmetProvider>\n    </>\n  );\n}","export const selectAllComponents = state => state.components.items;\n","export const selectAllOrders = state => state.orders.items;\nexport const selectActiveOrder = state => state.orders.activeItem;\nexport const selectLoading = state => state.orders.isLoading;","export const selectAllProducts = state => state.products.items;\nexport const selectActiveProduct = state => state.products.activeItem;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","axios","process","groups","value","label","CollectionEditor","components","useSelector","selectAllComponents","t","useTranslation","componentList","array","forEach","component","push","_id","name","units","useState","selectedGroup","setSelectedGroup","selectedFiles","setSelectedFiles","selectedComponents","setSelectedComponents","isEditorOpen","setIsEditorOpen","id","e","target","classList","initialValues","group","dimensions","height","depth","description","basePrice","images","quantity","onSubmit","values","resetForm","formData","FormData","append","index","componentId","file","headers","console","log","htmlFor","Select","onChange","options","defaultValue","placeholder","event","files","multiple","render","arrayHelpers","form","map","prevState","updatedComponents","length","remove","splice","currencies","editedComponent","ComponentList","dispatch","useDispatch","isListOpen","setIsListOpen","isModalEditOpen","setIsModalEditOpen","selectedCurrency","setSelectedCurrency","selectedUnits","setSelectedUnits","isDeleteModalOpen","setIsDeleteModalOpen","closeDeleteModal","document","closeEditModal","ComponentsArray","price","currency","add","openEditModal","openDeleteModal","val","addComponent","error","updateComponent","deleteComponent","terms","MaterialsPlanner","selectedTerm","setSelectedTerm","orders","selectAllOrders","allOrdersArray","products","selectAllProducts","date","Date","targetDate","setDate","getDate","Number","unsorted","getOrderList","filter","order","parse","plannedDeadline","number","findedComponentsList","product","find","p","toLowerCase","c","targetComponent","fabricStatus","fabric","getComponentsList","MyRoom","useEffect","fetchAllComponents","toast","fetchAllOrders","fetchAllProducts","state","items","selectActiveOrder","activeItem","selectLoading","isLoading","selectActiveProduct"],"sourceRoot":""}