{"version":3,"file":"static/js/241.7b7d491c.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/OurProducts/ProductDetails/ProductDetails.module.css?e195","webpack://furniture-production-frontend/./src/components/OurProducts/AdminMenu/AdminMenu.module.css?0177","components/OurProducts/AdminMenu/AdminMenu.js","components/OurProducts/ProductComponents/ProductComponents.js","components/OurProducts/ProductDetails/ProductDetails.js","pages/ProductDetails.js","redux/components/selectors.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ProductDetails_section__nPSK1\",\"title\":\"ProductDetails_title__Qkudl\",\"image\":\"ProductDetails_image__LbA4l\",\"baseInfoTitle\":\"ProductDetails_baseInfoTitle__0a0ed\",\"price\":\"ProductDetails_price__DFFDm\"};","// extracted by mini-css-extract-plugin\nexport default {\"delModalWrapper\":\"AdminMenu_delModalWrapper__Gfzrs\",\"formWrapper\":\"AdminMenu_formWrapper__ybfPv\",\"formItem\":\"AdminMenu_formItem__KchmS\",\"field\":\"AdminMenu_field__bFN4e\",\"inputArray\":\"AdminMenu_inputArray__+FLIB\",\"minBtn\":\"AdminMenu_minBtn__BCYDU\",\"btn\":\"AdminMenu_btn__7lnqu\",\"delBtn\":\"AdminMenu_delBtn__LcZEy\",\"modalSubmitButton\":\"AdminMenu_modalSubmitButton__lp4X-\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteProduct, updateProduct } from \"../../../redux/products/operations\";\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from './AdminMenu.module.css';\nimport { useState } from 'react';\nimport { PopUp } from \"components/PopUp/PopUp\";\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport axios from 'axios';\nimport { selectAllComponents } from \"../../../redux/components/selectors\";\nimport Select from 'react-select';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nexport const AdminMenu = (id) => {\n\n    const dispatch = useDispatch();\n    const product = useSelector(selectActiveProduct);\n    const components = useSelector(selectAllComponents).array;\n    const initialComponents = product.components;\n    let componentList = [];\n\n    components.forEach((component) => {\n        componentList.push({value: component._id, label: `${component.name}/${component.units}`})\n    })\n\n    const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n    const [selectedComponents, setSelectedComponents] = useState([ ...initialComponents ]);\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n    const handleDelete = () => {\n        dispatch(deleteProduct(id));\n    }\n\n    const openEditModal = () => {\n      setIsModalEditOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeEditModal = () => {\n      setIsModalEditOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n\n    const openDeleteModal = () => {\n      setIsDeleteModalOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeDeleteModal = () => {\n      setIsDeleteModalOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n    \n    const getSelectLabel = (id) => {\n        try {\n          const placeholder = componentList.find(c => c.value === id).label;\n           return placeholder\n        } catch {\n            return ('Select...')\n        }\n    }\n\n    return (\n        <div>\n            <button onClick={openDeleteModal} className={css.btn}>Delete</button>\n            <button className={css.btn} onClick={openEditModal}>Edit</button>\n            <PopUp \n                isOpen={isModalEditOpen}\n                close={closeEditModal}\n                body={\n                    <>\n                        <p>Edit mode</p>\n                        <Formik\n                        initialValues={{\n                            name: product.name,\n                            dimensions: {\n                                width: product.dimensions.width,\n                                height: product.dimensions.height,\n                                depth: product.dimensions.depth\n                            },\n                            subscription: product.subscription,\n                            basePrice: product.basePrice,\n                            components: selectedComponents,\n                            // components: product.components,\n                        }}\n                        onSubmit={async (values) => {\n                            try {\n                                values.components = [ ...selectedComponents ]\n                                dispatch(updateProduct({ ...id, ...values }));\n                                closeEditModal();\n                            } catch(error) {\n                                console.log(error);\n                            }\n                        }}\n                        >\n                        <Form className={css.formWrapper}>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"name\">Name</label>\n                                <Field className={css.field} id=\"name\" name=\"name\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.width\">Width</label>\n                                <Field className={css.field} id=\"dimensions.width\" name=\"dimensions.width\" placeholder=\"Width\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.depth\">Depth</label>\n                                <Field className={css.field} id=\"dimensions.depth\" name=\"dimensions.depth\" placeholder=\"Depth\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"dimensions.height\">Height</label>\n                                <Field className={css.field} id=\"dimensions.height\" name=\"dimensions.height\" placeholder=\"Height\"/>\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"subscription\">Subscription</label>\n                                <Field className={css.field} id=\"subscription\" name=\"subscription\" placeholder=\"Subscription\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <label htmlFor=\"basePrice\">Base price</label>\n                                <Field className={css.field} id=\"basePrice\" name=\"basePrice\" placeholder=\"12500\" />\n                            </div>\n                            <div className={css.formItem}>\n                                <FieldArray\n                                    name=\"components\"\n                                    render={(arrayHelpers) => (\n                                        <div>\n                                        {arrayHelpers.form.values.components.map((component, index) => (\n                                            <div key={index} className={css.inputArray}>\n                                            <Field component={Select} \n                                                name={`components.${index}`} \n                                                placeholder={getSelectLabel(component)}\n                                                onChange={e => setSelectedComponents(prevState => {\n                                                    const updatedComponents = [...prevState];\n                                                    updatedComponents[index] = e.value;\n                                                    return updatedComponents;\n                                                })}\n                                                options={componentList}\n                                                >\n                                            </Field>\n                                            {arrayHelpers.form.values.components.length > 1 ? <button\n                                                className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.remove(index)}\n                                            >\n                                                -\n                                            </button> : <></>}\n                                            {index === arrayHelpers.form.values.components.length - 1 && (\n                                                <button\n                                                    className={css.minBtn}\n                                                type=\"button\"\n                                                onClick={() => arrayHelpers.push('')}\n                                                >\n                                                +\n                                                </button>\n                                            )}\n                                            </div>\n                                        ))}\n                                        </div>\n                                    )}\n                                />  \n                            </div>\n                            <button type=\"submit\" className={`${css.btn} ${css.modalSubmitButton}`}>Submit</button>\n                        </Form>\n                        </Formik>\n                    </>\n                }\n            />\n            <PopUp \n                isOpen={isDeleteModalOpen}\n                close={closeDeleteModal}\n                body={\n                    <>\n                        <p>Are you sure???</p>\n                        <div className={css.delModalWrapper}>\n                            <button onClick={closeDeleteModal} className={css.btn}>Cancel</button>\n                            <button onClick={handleDelete} className={`${css.btn} ${css.delBtn}`}>Delete</button>\n                        </div>\n                    </>}\n            />\n        </div>\n    )\n}","import { selectAllComponents } from \"../../../redux/components/selectors\";\nimport { useSelector } from \"react-redux\";\n\nexport const ProductComponents = ({ components }) => {\n\n  const allComponentsArray = useSelector(selectAllComponents).array;\n\n  const targetComponent = (id) => {\n    const target = allComponentsArray.find((component) => (component._id === id));\n    return target;\n  };\n\n  try {\n    return (\n        <>\n            <p>Product components:</p>\n            <ul>\n            {components.map(component => \n                <li key={component}>\n                    <p>{`${targetComponent(component).name} NUMBER ${targetComponent(component).units}`}</p>\n                </li>\n            )}\n            </ul>\n        </>\n\n    )}catch {\n        return (\n            <p>not found</p>\n        )\n    }\n};","import { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { selectActiveProduct } from '../../../redux/products/selectors';\nimport css from \"./ProductDetails.module.css\";\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { useAuth } from \"hooks\";\nimport { AdminMenu } from \"../AdminMenu/AdminMenu\";\nimport { ProductComponents } from \"../ProductComponents/ProductComponents\";\n\nconst bedSizes = [\n  { value: '140', label: '140 x 200(190)' },\n  { value: '160', label: '160 x 200(190)' },\n  { value: '180', label: '180 x 200(190)' },\n  { value: '200', label: '200 x 200(190)' },\n];\n\nexport const ProductDetails = () => {\n\n    const { user, isLoggedIn } = useAuth();\n    const [selectedBedSize, setSelectedBedSize] = useState({ value: '160', label: '160 x 200(190)' });\n    const { id } = useParams();\n    const product = useSelector(selectActiveProduct);\n    const differenceInWidth = product.dimensions.width - 160;\n    const price = product.basePrice;\n\n    return(\n        <div className={css.section}>\n            <h1 className={css.title}>{product.name}</h1>\n            <Carousel showIndicators={false}>\n                {product.images.map((link) => (\n                    <div key={link}>\n                        <img src={link} alt={product.name}/>\n                    </div>\n                ))}\n            </Carousel>\n            {product.group === 'bed' ? \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>Sleeping area:</p>\n                    <Select\n                        defaultValue={selectedBedSize}\n                        onChange={setSelectedBedSize}\n                        options={bedSizes}\n                    />\n                    <p className={css.baseInfoTitle}>Overall size:</p>\n                    <p>{Number(selectedBedSize.value) + Number(differenceInWidth)} x {product.dimensions.depth}({product.dimensions.depth-10})</p>\n                    <p className={css.baseInfoTitle}>Price:</p>\n                    <p className={css.price}>{price} ₴</p>\n                </div> : \n                <div className={css.baseInfoWrapper}>\n                    <p className={css.baseInfoTitle}>Overall size:</p>\n                    <p>{product.dimensions.depth} x {product.dimensions.width} x {product.dimensions.height}</p>\n                    <p className={css.baseInfoTitle}>Price:</p>\n                    <p className={css.price}>{product.basePrice} ₴</p>\n                </div>}\n            <p className={css.baseInfoTitle}>Description:</p>\n            <p>{product.subscription}</p>\n            {isLoggedIn ? \n                (user.subscription === \"administrator\" && (\n            <div>\n                <ProductComponents components={product.components}/>\n                <AdminMenu id={id}/>\n            </div>\n            )) : <></>}\n        </div>\n    )\n}","import { ProductDetails } from \"components/OurProducts/ProductDetails/ProductDetails\"\n\nexport default function Product () {\n    return (\n        <ProductDetails/>\n    )\n}","export const selectAllComponents = state => state.components.items;\n","export const selectAllProducts = state => state.products.items;\nexport const selectActiveProduct = state => state.products.activeItem;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","axios","process","AdminMenu","id","dispatch","useDispatch","product","useSelector","selectActiveProduct","components","selectAllComponents","array","initialComponents","componentList","forEach","component","push","value","_id","label","name","units","useState","isModalEditOpen","setIsModalEditOpen","selectedComponents","setSelectedComponents","isDeleteModalOpen","setIsDeleteModalOpen","closeEditModal","document","classList","remove","closeDeleteModal","getSelectLabel","find","c","add","initialValues","dimensions","height","depth","subscription","basePrice","onSubmit","values","updateProduct","error","console","log","htmlFor","placeholder","render","arrayHelpers","form","map","index","Select","onChange","e","prevState","updatedComponents","options","length","deleteProduct","ProductComponents","allComponentsArray","targetComponent","bedSizes","ProductDetails","useAuth","user","isLoggedIn","selectedBedSize","setSelectedBedSize","useParams","differenceInWidth","price","showIndicators","images","link","src","alt","group","defaultValue","Number","Product","state","items","selectAllProducts","products","activeItem"],"sourceRoot":""}