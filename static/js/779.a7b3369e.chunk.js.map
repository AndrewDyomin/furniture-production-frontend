{"version":3,"file":"static/js/779.a7b3369e.chunk.js","mappings":"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","sources":["components/OurProducts/Konvas/Smart.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Stage, Layer, Rect, Line, Text } from 'react-konva';\n\nexport default function Smart({\n  dimensions,\n  productWidth,\n  productDepth,\n  angleDirection,\n}) {\n  const [scaleFactor, setScaleFactor] = useState(1);\n\n  const sofaTotalDepth = productDepth * scaleFactor;\n  const sofaTotalWidth = productWidth * scaleFactor;\n\n  const sleepingWidth = sofaTotalWidth - 15;\n  const sleepingDepth = sofaTotalDepth - 15;\n\n  const cornerBack = 15 * scaleFactor;\n  const cornerSeatWidth = sleepingWidth / 3;\n  const cornerSeatDepth = sofaTotalDepth - 15 * scaleFactor;\n\n  const linearSeatWidth = (sleepingWidth / 3) * 2;\n  const linearSeatDepth = 70 * scaleFactor;\n\n  const offsetX =\n    dimensions.width / 2 + (cornerSeatWidth + cornerBack) - sleepingWidth / 2;\n  const offsetY = dimensions.height / 2 - sleepingDepth / 2;\n\n  useEffect(() => {\n    const value = Math.min(\n      (0.7 * dimensions.width) / productWidth,\n      (0.7 * dimensions.height) / productDepth\n    );\n    if (value > 0) {\n      setScaleFactor(value);\n    }\n  }, [dimensions, productWidth, productDepth]);\n\n  return (\n    <div>\n      <Stage width={dimensions.width} height={dimensions.height}>\n        {angleDirection.value === '7' && (\n          <Layer>\n            <Line\n              points={[\n                offsetX,\n                offsetY,\n                offsetX,\n                offsetY - cornerBack,\n                offsetX - (cornerBack + cornerSeatWidth),\n                offsetY - cornerBack,\n                offsetX - (cornerBack + cornerSeatWidth),\n                offsetY + cornerSeatDepth,\n                offsetX - cornerSeatWidth,\n                offsetY + cornerSeatDepth,\n                offsetX - cornerSeatWidth,\n                offsetY,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={true}\n            />\n            <Rect\n              x={offsetX - cornerSeatWidth}\n              y={offsetY}\n              width={cornerSeatWidth}\n              height={cornerSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX}\n              y={offsetY}\n              width={linearSeatWidth}\n              height={linearSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX}\n              y={offsetY - cornerBack}\n              width={linearSeatWidth}\n              height={cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n            />\n          </Layer>\n        )}\n        {angleDirection.value !== '7' && (\n          <Layer>\n            <Line\n              points={[\n                offsetX + (cornerSeatWidth - cornerBack),\n                offsetY,\n                offsetX + (cornerSeatWidth - cornerBack),\n                offsetY - cornerBack,\n                2 * offsetX +\n                  (cornerSeatWidth - cornerBack) -\n                  (offsetX - (cornerBack + cornerSeatWidth)),\n                offsetY - cornerBack,\n                2 * offsetX +\n                  (cornerSeatWidth - cornerBack) -\n                  (offsetX - (cornerBack + cornerSeatWidth)),\n                offsetY + cornerSeatDepth,\n                2 * offsetX +\n                  (cornerSeatWidth - cornerBack) -\n                  (offsetX - cornerSeatWidth),\n                offsetY + cornerSeatDepth,\n                2 * offsetX +\n                  (cornerSeatWidth - cornerBack) -\n                  (offsetX - cornerSeatWidth),\n                offsetY,\n              ]}\n              stroke=\"black\"\n              strokeWidth={1}\n              closed={true}\n            />\n            <Rect\n              x={offsetX + (cornerSeatWidth - cornerBack)}\n              y={offsetY}\n              width={cornerSeatWidth}\n              height={cornerSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX - (cornerSeatWidth + cornerBack)}\n              y={offsetY}\n              width={linearSeatWidth}\n              height={linearSeatDepth}\n              stroke=\"black\"\n              strokeWidth={1}\n              cornerRadius={3}\n            />\n            <Rect\n              x={offsetX - (cornerSeatWidth + cornerBack)}\n              y={offsetY - cornerBack}\n              width={linearSeatWidth}\n              height={cornerBack}\n              stroke=\"black\"\n              strokeWidth={1}\n            />\n          </Layer>\n        )}\n        <Layer>\n          <Line\n            points={[\n              offsetX + 100,\n              offsetY + (sofaTotalDepth),\n              offsetX - cornerSeatWidth - cornerBack + sofaTotalWidth,\n              offsetY + (sofaTotalDepth),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX,\n              offsetY + (sofaTotalDepth),\n              offsetX - cornerSeatWidth - cornerBack,\n              offsetY + (sofaTotalDepth),\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={offsetX}\n            y={(offsetY + (sofaTotalDepth)) - 9}\n            text={productWidth}\n            width={100}\n            align='center'\n            fontSize={18}\n          />\n          <Line\n            points={[\n              offsetX - (sofaTotalWidth / 2),\n              offsetY - cornerBack,\n              offsetX - (sofaTotalWidth / 2),\n              offsetY - cornerBack + (sofaTotalDepth / 2) - 50,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Line\n            points={[\n              offsetX - (sofaTotalWidth / 2),\n              offsetY - cornerBack + (sofaTotalDepth / 2) + 50,\n              offsetX - (sofaTotalWidth / 2),\n              offsetY - cornerBack + sofaTotalDepth,\n            ]}\n            stroke=\"black\"\n            strokeWidth={1}\n            closed={false}\n          />\n          <Text\n            x={(offsetX - (sofaTotalWidth / 2)) - 9}\n            y={(offsetY - cornerBack) + (sofaTotalDepth / 2) + 50}\n            text={productDepth}\n            width={100}\n            align='center'\n            rotation={270}\n            fontSize={18}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"names":["Smart","dimensions","productWidth","productDepth","angleDirection","useState","scaleFactor","setScaleFactor","sofaTotalDepth","sofaTotalWidth","sleepingWidth","sleepingDepth","cornerBack","cornerSeatWidth","cornerSeatDepth","linearSeatWidth","linearSeatDepth","offsetX","width","offsetY","height","useEffect","value","Math","min","points","stroke","strokeWidth","closed","x","y","cornerRadius","text","align","fontSize","rotation"],"sourceRoot":""}