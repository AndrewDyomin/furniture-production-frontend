{"version":3,"file":"static/js/565.4783f318.chunk.js","mappings":"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","sources":["webpack://furniture-production-frontend/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://furniture-production-frontend/./src/components/CollectionEditor/CollectionEditor.module.css?fe36","components/CollectionEditor/CollectionEditor.js","webpack://furniture-production-frontend/./src/components/ComponentList/ComponentList.module.css?5aff","components/ComponentList/ComponentList.js","pages/MyRoom.js","redux/components/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CollectionEditor_wrapper__BODBf\",\"formWrapper\":\"CollectionEditor_formWrapper__GYzoj\",\"formItem\":\"CollectionEditor_formItem__qqpkN\",\"field\":\"CollectionEditor_field__XQu45\",\"inputArray\":\"CollectionEditor_inputArray__Ospp1\",\"minBtn\":\"CollectionEditor_minBtn__6g+Kk\",\"btn\":\"CollectionEditor_btn__PRioK\"};","import { Formik, Field, Form, FieldArray } from 'formik';\nimport { selectAllComponents } from \"../../redux/components/selectors\";\nimport axios from 'axios';\nimport css from './CollectionEditor.module.css';\nimport { useState } from 'react';\nimport Select from 'react-select';\nimport { useSelector } from 'react-redux';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\n\nconst groups = [\n    { value: 'sofa', label: 'Sofa' },\n    { value: 'bed', label: 'Bed' },\n  ];\n\nexport const CollectionEditor = () => {\n\n    const components = useSelector(selectAllComponents).array;\n    let componentList = [];\n\n    components.forEach((component) => {\n        componentList.push({value: component._id, label: `${component.name}/${component.units}`})\n    })\n\n    const [selectedGroup, setSelectedGroup] = useState({ value: 'sofa', label: 'Sofa' });\n    const [selectedFiles, setSelectedFiles] = useState('');\n    const [selectedComponents, setSelectedComponents] = useState([]);\n\n    const handleFileChange = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n  return (\n    <div className={css.wrapper}>\n        <h2 className={css.title}>Collection Editor</h2>\n        <Formik\n        initialValues={{\n            group: selectedGroup.value,\n            name: '',\n            dimensions: {\n                width: '',\n                height: '',\n                depth: ''\n            },\n            subscription: '',\n            basePrice: '',\n            images: [''],\n            components: [''],\n        }}\n        onSubmit={async (values, { resetForm }) => {\n            try {\n                const formData = new FormData();\n                formData.append('group', selectedGroup.value);\n                formData.append('name', values.name);\n                formData.append('dimensions[width]', values.dimensions.width);\n                formData.append('dimensions[height]', values.dimensions.height);\n                formData.append('dimensions[depth]', values.dimensions.depth);\n                formData.append('subscription', values.subscription);\n                formData.append('basePrice', values.basePrice);\n                selectedComponents.forEach((component, index) => {\n                    formData.append(`components[${index}]`, component);\n                });\n                formData.append('file', selectedFiles[0]);\n                await axios.post('/collections/add', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n                // formData.forEach((value, key) => {\n                //     console.log(key + ': ' + value);\n                // });\n                resetForm();\n            } catch(error) {\n                console.log(error);\n            }\n        }}\n        >\n        <Form className={css.formWrapper}>\n            <div className={css.formItem}>\n                <label htmlFor=\"group\">Group</label>\n                <Field component={Select} \n                    name=\"group\" \n                    id=\"group\"\n                    onChange={e => setSelectedGroup(e)}\n                    options={groups}\n                    defaultValue={selectedGroup.value}\n                    >\n                </Field>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"name\">Name</label>\n                <Field className={css.field} id=\"name\" name=\"name\" placeholder=\"Faynee mini\" />\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.width\">Width</label>\n                <Field className={css.field} id=\"dimensions.width\" name=\"dimensions.width\" placeholder=\"Width\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.depth\">Depth</label>\n                <Field className={css.field} id=\"dimensions.depth\" name=\"dimensions.depth\" placeholder=\"Depth\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"dimensions.height\">Height</label>\n                <Field className={css.field} id=\"dimensions.height\" name=\"dimensions.height\" placeholder=\"Height\"/>\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"subscription\">Subscription</label>\n                <Field className={css.field} id=\"subscription\" name=\"subscription\" placeholder=\"Subscription\" />\n            </div>\n            <div className={css.formItem}>\n                <label htmlFor=\"basePrice\">Base price</label>\n                <Field className={css.field} id=\"basePrice\" name=\"basePrice\" placeholder=\"12500\" />\n            </div>\n            <div className={css.formItem}>\n                <Field className={css.field} id=\"files\" name=\"files\" type=\"file\" onChange={handleFileChange}/>\n            </div>\n            <div className={css.formItem}>\n                <FieldArray\n                    name=\"components\"\n                    render={(arrayHelpers) => (\n                        <div>\n                        {arrayHelpers.form.values.components.map((component, index) => (\n                            <div key={index} className={css.inputArray}>\n                            {/* <Field className={css.field} name={`components.${index}`} placeholder=\"components\"/> */}\n                            <Field component={Select} \n                                name={`components.${index}`} \n                                onChange={e => setSelectedComponents(prevState => {\n                                    const updatedComponents = [...prevState];\n                                    updatedComponents[index] = e.value;\n                                    return updatedComponents;\n                                  })}\n                                options={componentList}\n                                >\n                            </Field>\n                            {arrayHelpers.form.values.components.length > 1 ? <button\n                                className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => arrayHelpers.remove(index)}\n                            >\n                                -\n                            </button> : <></>}\n                            {index === arrayHelpers.form.values.components.length - 1 && (\n                                <button\n                                    className={css.minBtn}\n                                type=\"button\"\n                                onClick={() => arrayHelpers.push('')}\n                                >\n                                +\n                                </button>\n                            )}\n                            </div>\n                        ))}\n                        </div>\n                    )}\n                />  \n            </div>\n            <button type=\"submit\" className={css.btn}>Submit</button>\n        </Form>\n        </Formik>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ComponentList_wrapper__giwUD\",\"titleArea\":\"ComponentList_titleArea__mSre9\",\"openBtn\":\"ComponentList_openBtn__JXZrR\",\"openBtnIcon\":\"ComponentList_openBtnIcon__81Ht3\",\"active\":\"ComponentList_active__b-xnh\",\"list\":\"ComponentList_list__nKaDk\",\"item\":\"ComponentList_item__rBpvr\",\"price\":\"ComponentList_price__b8Be0\",\"buttons\":\"ComponentList_buttons__MMPMv\",\"editBtn\":\"ComponentList_editBtn__8we70\",\"title\":\"ComponentList_title__EfwIm\",\"formItem\":\"ComponentList_formItem__tEUVD\",\"field\":\"ComponentList_field__+BOaR\",\"inputArray\":\"ComponentList_inputArray__tvYgw\",\"btn\":\"ComponentList_btn__9-6O+\",\"delBtn\":\"ComponentList_delBtn__uRtU-\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Formik, Field, Form } from 'formik';\nimport Select from 'react-select';\nimport { selectAllComponents } from \"../../redux/components/selectors\";\nimport { addComponent, deleteComponent, updateComponent } from \"../../redux/components/operations\";\nimport { PopUp } from \"../PopUp/PopUp\";\nimport svgIcons from '../../images/icons.svg';\nimport css from \"./ComponentList.module.css\";\n\nconst currencies = [\n    { value: 'USD', label: 'USD' },\n    { value: 'грн', label: 'грн' },\n  ];\nconst units = [\n    { value: 'шт', label: 'шт' },\n    { value: 'м', label: 'м' },\n    { value: 'кг', label: 'кг' },\n];\n\nlet editedComponent = {};\n\nexport const ComponentList = () => {\n\n    const components = useSelector(selectAllComponents);\n    const dispatch = useDispatch();\n    const [isListOpen, setIsListOpen] = useState(false);\n    const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n    const [selectedCurrency, setSelectedCurrency] = useState({value: 'грн', label: 'грн'});\n    const [selectedUnits, setSelectedUnits] = useState({value: 'шт.', label: 'шт'});\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n    const openDeleteModal = (component) => {\n      editedComponent = component;\n      setIsDeleteModalOpen(true);\n      document.body.classList.add('modal-open');\n    };\n  \n    const closeDeleteModal = () => {\n      setIsDeleteModalOpen(false);\n      document.body.classList.remove('modal-open');\n    };\n\n    const handleDelete = () => {\n        dispatch(deleteComponent(editedComponent._id));\n        closeDeleteModal();\n    }\n\n    const handleListOpen = (e) => {\n        isListOpen ? setIsListOpen(false) : setIsListOpen(true)\n        !isListOpen ? e.target.classList = css.active : e.target.classList = css.notActive;\n    };\n\n    const openEditModal = (component) => {\n        editedComponent = component;\n        console.log(editedComponent)\n        setIsModalEditOpen(true);\n        document.body.classList.add('modal-open');\n      };\n    \n      const closeEditModal = () => {\n        setIsModalEditOpen(false);\n        document.body.classList.remove('modal-open');\n      };\n\n    const ComponentsArray = () => {\n        try {\n            return(\n            components.array.map((component) => (\n                <li key={component._id} className={css.item}>\n                    <p>{component.name}</p>\n                    <div>\n                        <p>{component.subscription}</p>\n                    </div>\n                    <div className={css.price}>\n                        <p>Price: {component.price}</p>\n                        <p>{component.currency}</p>\n                        <p>/{component.units}</p>\n                    </div>\n                    <div className={css.buttons}>\n                        <button className={css.editBtn} onClick={() => openEditModal(component)}>Edit</button>\n                        <button className={css.editBtn} onClick={() => openDeleteModal(component)}>Delete</button>\n                    </div>\n                </li>\n            )\n        ))} catch(err) {\n            console.log(err)\n            return (<></>)\n        }};\n\n    return (\n        <div className={css.wrapper}>\n            <div className={css.titleArea}>\n                <p className={css.title}>Component list</p>\n                <button className={css.openBtn} id=\"isOpen\" onClick={handleListOpen}>\n                    <svg>\n                        <use className={css.openBtnIcon} href={`${svgIcons}#icon-arrow-down`} width={'32px'}/>\n                    </svg>\n                </button>\n            </div>\n            {isListOpen ? \n            <div>\n                <ul className={css.list}>\n                    <ComponentsArray />\n                </ul>\n                <p className={css.title}>Add new component</p>\n                <Formik\n                initialValues={{         \n                    name: '',\n                    subscription: '',\n                    price: '',\n                    currency: selectedCurrency.value,\n                    units: selectedUnits.value, \n                }}\n                onSubmit={async (values, { resetForm }) => {\n                    try {\n                        const val = { ...values, currency: selectedCurrency.value, units: selectedUnits.value }\n                        dispatch(addComponent(val));\n                        resetForm();\n                    } catch(error) {\n                        console.log(error);\n                    }\n                }}\n                >\n                <Form className={css.formWrapper}>\n                    <div className={css.formItem}>\n                        <Field className={css.field} id=\"name\" name=\"name\" placeholder=\"Name\" />\n                    </div>\n                    <div className={css.formItem}>\n                        <Field className={css.field} id=\"subscription\" name=\"subscription\" placeholder=\"Subscription\" />\n                    </div>\n                    <div className={css.formItem}>\n                        <Field className={css.field} id=\"price\" name=\"price\" placeholder=\"Price\" />\n                    </div>\n                    <div className={css.formItem}>\n                        <label htmlFor=\"currency\">Currency</label>\n                        <Field component={Select} \n                                name=\"currency\" \n                                id=\"currency\"\n                                onChange={e => setSelectedCurrency(e)}\n                                options={currencies}\n                                defaultValue={selectedCurrency.value}\n                                >\n                        </Field>\n                    </div>\n                    <div className={css.formItem}>\n                        <label htmlFor=\"units\">Units</label>\n                        <Field component={Select} \n                                name=\"units\" \n                                id=\"units\"\n                                onChange={e => setSelectedUnits(e)}\n                                options={units}\n                                defaultValue={selectedUnits.value}\n                                >\n                        </Field>\n                    </div>\n                    <button type=\"submit\" className={css.btn}>Add component</button>\n                </Form>\n                </Formik>\n                <PopUp \n                    isOpen={isModalEditOpen}\n                    close={closeEditModal}\n                    body={\n                        <>\n                            <p>Edit mode</p>\n                            <Formik\n                            initialValues={{\n                                name: editedComponent.name,\n                                subscription: editedComponent.subscription,\n                                price: editedComponent.price,\n                                currency: editedComponent.currency,\n                                units: editedComponent.units,\n                            }}\n                            onSubmit={async (values) => {\n                                try {\n                                    const id = editedComponent._id;\n                                    dispatch(updateComponent({ id, ...values }));\n                                    closeEditModal();\n                                } catch(error) {\n                                    console.log(error);\n                                }\n                            }}\n                            >\n                            <Form className={css.formWrapper}>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"name\">Name</label>\n                                    <Field className={css.field} id=\"name\" name=\"name\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"subscription\">Subscription</label>\n                                    <Field className={css.field} id=\"subscription\" name=\"subscription\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"price\">Price</label>\n                                    <Field className={css.field} id=\"price\" name=\"price\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"currency\">Currency</label>\n                                    <Field className={css.field} id=\"currency\" name=\"currency\"/>\n                                </div>\n                                <div className={css.formItem}>\n                                    <label htmlFor=\"units\">Units</label>\n                                    <Field className={css.field} id=\"units\" name=\"units\"/>\n                                </div>\n                                <button type=\"submit\" className={css.btn}>Submit</button>\n                            </Form>\n                            </Formik>\n                        </>}\n                />\n                <PopUp \n                    isOpen={isDeleteModalOpen}\n                    close={closeDeleteModal}\n                    body={\n                        <>\n                            <p>Are you sure???</p>\n                            <div className={css.delModalWrapper}>\n                                <button onClick={closeDeleteModal} className={css.btn}>Cancel</button>\n                                <button onClick={handleDelete} className={`${css.btn} ${css.delBtn}`}>Delete</button>\n                            </div>\n                        </>}\n                />\n            </div> : <></>}\n        </div>\n    )\n}","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CollectionEditor } from '../components/CollectionEditor/CollectionEditor';\nimport { ComponentList } from '../components/ComponentList/ComponentList';\n\nexport default function MyRoom() {\n\n  return (\n    <>\n      <HelmetProvider>\n          <Helmet>\n              <title>My room</title>\n          </Helmet>\n          <h1>It's your private room</h1>\n          <CollectionEditor />\n          <ComponentList />\n      </HelmetProvider>\n    </>\n  );\n}","export const selectAllComponents = state => state.components.items;\n"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","axios","process","groups","value","label","CollectionEditor","components","useSelector","selectAllComponents","array","componentList","forEach","component","push","_id","name","units","useState","selectedGroup","setSelectedGroup","selectedFiles","setSelectedFiles","selectedComponents","setSelectedComponents","initialValues","group","dimensions","height","depth","subscription","basePrice","images","onSubmit","values","resetForm","formData","FormData","append","index","headers","console","log","htmlFor","Select","id","onChange","e","options","defaultValue","placeholder","event","target","files","render","arrayHelpers","form","map","prevState","updatedComponents","length","remove","currencies","editedComponent","ComponentList","dispatch","useDispatch","isListOpen","setIsListOpen","isModalEditOpen","setIsModalEditOpen","selectedCurrency","setSelectedCurrency","selectedUnits","setSelectedUnits","isDeleteModalOpen","setIsDeleteModalOpen","closeDeleteModal","document","classList","closeEditModal","ComponentsArray","price","currency","add","openEditModal","openDeleteModal","err","val","addComponent","error","updateComponent","deleteComponent","MyRoom","state","items"],"sourceRoot":""}